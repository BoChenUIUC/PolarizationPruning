#!/usr/bin/python

import numpy as np
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import os
labelsize_b = 13
linewidth = 2
plt.rcParams['xtick.labelsize'] = 16
plt.rcParams['ytick.labelsize'] = 16
plt.rcParams["font.family"] = "Times New Roman"
# colors = ['#DB1F48','#FF9636','#1C4670','#9D5FFB','#21B6A8','#D65780']
# colors = ['#ED4974','#16B9E1','#58DE7B','#F0D864','#FF8057','#8958D3']
colors  =['#FD0707','#0D0DDF','#DDDB03','#129114','#FF8A12','#8402AD']
markers = ['o','^','s','>','P','D']
hatches = ['/' ,'\\','--','x', '+', 'O','-',]
linestyles = ['solid','dashed','dotted','dashdot',(0, (1, 10)),(5, (10, 3))]


def line_plot(XX,YY,label,color,path,xlabel,ylabel,lbsize=labelsize_b,lfsize=labelsize_b,legloc='best',
				xticks=None,yticks=None,ncol=None, yerr=None, xticklabel=None,yticklabel=None,xlim=None,ylim=None,ratio=None,
				use_arrow=False,arrow_coord=(0.4,30),markersize=8,bbox_to_anchor=None):
	fig, ax = plt.subplots()
	ax.grid(zorder=0)
	for i in range(len(XX)):
		xx,yy = XX[i],YY[i]
		if yerr is None:
			plt.plot(xx, yy, color = color[i], marker = markers[i], 
				label = label[i], 
				linewidth=2, markersize=markersize)
		else:
			plt.errorbar(xx, yy, yerr=yerr[i], color = color[i], 
				linestyle = linestyles[i], 
				marker = markers[i], label = label[i], 
				linewidth=2, markersize=markersize)
	plt.xlabel(xlabel, fontsize = lbsize)
	plt.ylabel(ylabel, fontsize = lbsize)
	if xlim is not None:
		ax.set_xlim(xlim)
	if ylim is not None:
		ax.set_ylim(ylim)
	if xticks is not None:
		plt.xticks(xticks,fontsize=lfsize)
	if yticks is not None:
		plt.yticks(yticks,fontsize=lfsize)
	if xticklabel is not None:
		ax.set_xticklabels(xticklabel)
	if yticklabel is not None:
		ax.set_yticklabels(yticklabel)
	if use_arrow:
		ax.text(
		    arrow_coord[0], arrow_coord[1], "Better", ha="center", va="center", rotation=-45, size=lbsize-8,
		    bbox=dict(boxstyle="larrow,pad=0.3", fc="white", ec="black", lw=2))
	plt.tight_layout()
	if ncol!=0:
		if ncol is None:
			plt.legend(loc=legloc,fontsize = lfsize)
		else:
			if bbox_to_anchor is None:
				plt.legend(loc=legloc,fontsize = lfsize,ncol=ncol)
			else:
				plt.legend(loc=legloc,fontsize = lfsize,ncol=ncol,bbox_to_anchor=bbox_to_anchor)
	if ratio is not None:
		xleft, xright = ax.get_xlim()
		ybottom, ytop = ax.get_ylim()
		ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)
	plt.tight_layout()
	fig.savefig(path,bbox_inches='tight')
	plt.close()

# breakdown for different traces
def plot_latency_breakdown(latency_breakdown_mean,latency_breakdown_std,latency_types,labels,filename,ncol,bbox_to_anchor):
	y_pos = np.arange(len(labels))
	latency_breakdown_mean = np.array(latency_breakdown_mean).transpose((1,0))*1000
	latency_breakdown_std = np.array(latency_breakdown_std).transpose((1,0))*1000
	width = 0.5
	plt.rcdefaults()
	fig, (ax1,ax2) = plt.subplots(1,2,sharey=True)
	for ax in [ax1,ax2]:
		left = np.array([0.0]*len(labels))
		for i in range(len(latency_types)):
			ax.barh(y_pos, latency_breakdown_mean[i], width, color=colors[i], xerr=latency_breakdown_std[i], left=left, 
				label=latency_types[i], hatch=hatches[i], align='center')
			left += latency_breakdown_mean[i]
	ax1.set_xlim(0,0.02*1000)
	ax2.set_xlim(0.02*1000,1500)
	ax1.spines['right'].set_visible(False)
	ax2.spines['left'].set_visible(False)
	ax1.yaxis.tick_left()
	d = .03 # how big to make the diagonal lines in axes coordinates
	# arguments to pass plot, just so we don't keep repeating them
	kwargs = dict(transform=ax1.transAxes, color='r', clip_on=False)
	ax1.plot((1-d,1+d), (-d,+d), **kwargs)
	ax1.plot((1-d,1+d),(1-d,1+d), **kwargs)

	kwargs.update(transform=ax2.transAxes)  # switch to the bottom axes
	ax2.plot((-d,+d), (1-d,1+d), **kwargs)
	ax2.plot((-d,+d), (-d,+d), **kwargs)

	ax1.set_yticks(y_pos, labels=labels, fontsize = 14)

	handles, labels = ax2.get_legend_handles_labels()
	fig.legend(handles, labels,bbox_to_anchor=bbox_to_anchor,ncol=ncol,fancybox=True, loc='upper center', fontsize=14)
	ax1.invert_yaxis()  
	fig.text(0.5, 0.0, 'Latency breakdown (ms)', fontsize = 14, ha='center')
	# for ax in [ax1,ax2]:
	# 	xleft, xright = ax.get_xlim()
	# 	ybottom, ytop = ax.get_ylim()
	# 	ratio = 0.35
	# 	ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)
	plt.tight_layout()
	fig.savefig(filename,bbox_inches='tight')

def measurements_to_cdf(latency,epsfile,labels):
    lbsize = 18
    # plot cdf
    fig, ax = plt.subplots()
    ax.grid(zorder=0)
    for i,latency_list in enumerate(latency):
        N = len(latency_list)
        cdf_x = np.sort(np.array(latency_list))
        cdf_p = np.array(range(N))/float(N)
        plt.plot(cdf_x, cdf_p, color = colors[i], label = labels[i], linewidth=4, linestyle=linestyles[i])
    plt.xlabel('Query Latency (s)', fontsize = lbsize)
    plt.ylabel('CDF', fontsize = lbsize)
    # xleft, xright = ax.get_xlim()
    # ybottom, ytop = ax.get_ylim()
    # ratio = 0.3
    # ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)
    plt.legend(loc='lower right',fontsize = lbsize)
    plt.tight_layout()
    fig.savefig(epsfile,bbox_inches='tight')
    plt.close()

def analyze_all_recorded_traces():
    print('Analyzing all recorded traces...')
    selected_batch_latency = []
    y = []
    yerr = []
    trpt = []
    trpterr = []
    # batch 1,2,4,8,16,32
    trace_filenames = []
    trace_filenames += [f'../DCN/{22*i:06d}' for i in [1,2,4,8,16,32,64]]
    trace_filenames += [f'../DCN-244/{244*i:06d}' for i in [1,2,4,8,16,32,64]]
    trace_filenames += [f'../WAN/{12*i:06d}' for i in [1,2,4,8,16,32,64]]
    trace_filenames += [f'../WAN-768/{768*i:06d}' for i in [1,2,4,8,16,32,64]]
    latency_mean_list = []
    latency_std_list = []
    trpt_mean_list = []
    trpt_std_list = []
    all_latency_list = []
    for tidx,filename in enumerate(trace_filenames):
        latency_list = []
        bandwidth_list = []
        with open(filename,'r') as f:
            for l in f.readlines():
                l = l.strip().split(' ')
                latency_list += [float(l[0])/1e3]
            if len(latency_list)>=10000:
            	latency_list = latency_list[:10000]
            else:
            	latency_list = latency_list[:1000]
            	latency_list = latency_list*10
        all_latency_list += [latency_list]
    import csv
    with open('../curr_videostream.csv', mode='r') as csv_file:
        # read network traces 
        csv_reader = csv.DictReader(csv_file)
        latency_list = []
        latency224_list = []
        num_of_line = 0
        for row in csv_reader:
            if float(row["latency"])>1e7 or float(row["latency"])<0 or float(row["downthrpt"])>1e8:
                continue
            for bs in [2**i for i in range(7)]:
                query_size = 3*32*32*4*bs # bytes
                latency_list += [query_size/float(row["downthrpt"]) + float(row["latency"])/1e6]
                query_size = 3*256*256*4*bs
                latency224_list += [query_size/float(row["downthrpt"]) + float(row["latency"])/1e6]
            num_of_line += 1
            if num_of_line==10000:break
        all_latency_list += np.array(latency_list).reshape((num_of_line,7)).transpose((1,0)).tolist()
        all_latency_list += np.array(latency224_list).reshape((num_of_line,7)).transpose((1,0)).tolist()
    all_latency_list = np.array(all_latency_list)
    relative_latency = all_latency_list[14:,:].copy()
    for b in range(7):
    	for start in [0,14]:
    		relative_latency[start+b] /= all_latency_list[b]
    	for start in [7,21]:
    		relative_latency[start+b] /= all_latency_list[7+b]
    relative_latency = np.log10(relative_latency)
    relative_latency = relative_latency.reshape((4,7,10000))
    labels = ['DCQ (CIFAR-10)','DCQ (ImageNet)','FCC (CIFAR-10)','FCC (ImageNet)']
    x = [[2**(i) for i in range(7)] for _ in range(len(labels))]
    y = relative_latency.mean(axis=-1)
    yerr = relative_latency.std(axis=-1)
    line_plot(x, y,labels,colors,'/home/bo/Dropbox/Research/SIGCOMM23/images/wdlr_vs_bs.eps','Query Batch Size','WDLR',
    	yerr=yerr,yticks=[1,2,3],yticklabel=[10,100,1000])	

    throughput = all_latency_list[14:,:].copy()
    throughput = 1/throughput 
    throughput = throughput.reshape((4,7,100,100)).mean(axis=-1)
    throughput *= np.array([2**i for i in range(7)]).reshape((1,7,1))
    throughput = np.log10(throughput)
    y = throughput.mean(axis=-1)
    yerr = throughput.std(axis=-1)
    line_plot(x, y,labels,colors,'/home/bo/Dropbox/Research/SIGCOMM23/images/throughput_vs_bs.eps','Query Batch Size','Query Throughput (1/s)',
    	yerr=yerr,yticks=[1,2,3],yticklabel=[10,100,1000])	

def plot_computation_dist():
	flops = [
	[100, 0],
	[100,100],
	[83.81,83.81],
	[93.54,93.54]
	]
	flops = np.array(flops).transpose((1,0))
	node_types = ['Node #1','Node #2']
	y_pos = np.arange(4)
	width = 0.5
	plt.rcdefaults()
	fig, ax = plt.subplots()
	left = np.array([0.,0.,0.,0.])
	# colors = ['#DB1F48','#1C4670']
	for i in range(2):
		ax.barh(y_pos, flops[i], width, color=colors[i], left=left, 
			label=node_types[i], hatch=hatches[i], align='center')
		left += flops[i]

	ax.set_yticks(y_pos, labels=['Standalone','Optimal','Ours\n(CIFAR-10)','Ours\n(ImageNet)'], fontsize = 14)
	plt.xlabel('FLOPS (%)', fontsize = 14)
	fig.legend(bbox_to_anchor=(0.8,0.45),ncol=1,fancybox=True, loc='upper center', fontsize=14)
	xleft, xright = ax.get_xlim()
	ybottom, ytop = ax.get_ylim()
	ratio = 0.4
	ax.set_aspect(abs((xright-xleft)/(ybottom-ytop))*ratio)
	plt.tight_layout()
	fig.savefig('/home/bo/Dropbox/Research/SIGCOMM23/images/flops_dist.eps',bbox_inches='tight')


def groupedbar(data_mean,data_std,ylabel,path,yticks=None,envs = [2,3,4],
				methods=['Ours','Standalone','Optimal','Ours*','Standalone*','Optimal*'],use_barlabel=False):
	fig = plt.figure()
	ax = fig.add_subplot(111)
	num_methods = data_mean.shape[1]
	num_env = data_mean.shape[0]
	center_index = np.arange(1, num_env + 1)*1.25
	# colors = ['lightcoral', 'orange', 'yellow', 'palegreen', 'lightskyblue']
	# colors = ['coral', 'orange', 'green', 'cyan', 'blue']

	ax.grid()
	ax.spines['bottom'].set_linewidth(3)
	ax.spines['top'].set_linewidth(3)
	ax.spines['left'].set_linewidth(3)
	ax.spines['right'].set_linewidth(3)
	plt.xticks(center_index, envs, size=14)
	ax.set_ylabel(ylabel, size=14)
	if yticks is not None:
		plt.yticks(yticks,fontsize=14)

	for i in range(num_methods):
	    x_index = center_index + (i - (num_methods - 1) / 2) * 0.16
	    hbar=plt.bar(x_index, data_mean[:, i], width=0.15, linewidth=2,
	            color=colors[i], label=methods[i], hatch=hatches[i], edgecolor='k')
	    plt.errorbar(x=x_index, y=data_mean[:, i],
	                 yerr=data_std[:, i], fmt='k.', elinewidth=3)
	    if use_barlabel:
	    	ax.bar_label(hbar, fmt='%.2f', fontsize = labelsize_b-16, rotation='vertical')
	

	plt.legend(bbox_to_anchor=(0.46, 1.28), fancybox=True,
	           loc='upper center', ncol=3, fontsize=20)
	fig.savefig(path, bbox_inches='tight')
	plt.close()

y_ea = [[[0.10053515434265137, 0.11851239204406738, 0.4115534722805023, 0.6619688272476196, 0.7965036630630493, 0.8551257848739624, 0.9001497030258179, 0.9154112935066223, 0.9208625555038452], [0.10027756541967392, 0.12076280266046524, 0.3006569445133209, 0.47837257385253906, 0.6171784996986389, 0.693761944770813, 0.7762260437011719, 0.8347564935684204, 0.8560543060302734], [0.1005651131272316, 0.1319209337234497, 0.44014573097229004, 0.6778314709663391, 0.8077834844589233, 0.8582148551940918, 0.900483250617981, 0.9165775179862976, 0.9203234910964966]],
[[0.10053515434265137, 0.14325681328773499, 0.534550666809082, 0.7910283803939819, 0.8858405947685242, 0.9186540842056274, 0.9332526922225952, 0.9369888305664062, 0.9383167028427124], [0.10027756541967392, 0.12064298242330551, 0.3004692494869232, 0.4780130982398987, 0.6166073679924011, 0.6934224963188171, 0.7757267951965332, 0.8345667719841003, 0.8558347821235657], [0.10055512189865112, 0.16379192471504211, 0.5675219297409058, 0.8028733134269714, 0.8902636766433716, 0.9199161529541016, 0.9338498115539551, 0.9376258850097656, 0.93870609998703]],
[[0.10080273449420929, 0.16486220061779022, 0.6271725296974182, 0.8477336168289185, 0.9090674519538879, 0.9266773462295532, 0.9332168698310852, 0.9340394735336304, 0.9343070983886719], [0.10027756541967392, 0.1206030622124672, 0.3010343015193939, 0.4775439202785492, 0.6165375709533691, 0.6934324502944946, 0.7760842442512512, 0.8344868421554565, 0.8558047413825989], [0.10080273449420929, 0.18924321234226227, 0.6558526158332825, 0.8617990612983704, 0.9179931879043579, 0.9332748651504517, 0.9397464990615845, 0.9405691027641296, 0.9408367276191711]]]
yerr_ea = [[[0.0010702908039093018, 0.0130164148285985, 0.06449627876281738, 0.04332319647073746, 0.028338516131043434, 0.024029118940234184, 0.019376114010810852, 0.0199959147721529, 0.019873330369591713], [0.0008326693787239492, 0.014998381957411766, 0.060017187148332596, 0.05467825010418892, 0.049944449216127396, 0.043020911514759064, 0.04179437831044197, 0.02501348964869976, 0.022911738604307175], [0.0011304139625281096, 0.021325737237930298, 0.06393025070428848, 0.04011991247534752, 0.022756922990083694, 0.025738680735230446, 0.019793668761849403, 0.02041413076221943, 0.020137231796979904]],
[[0.0010740082943812013, 0.025693265721201897, 0.07340136170387268, 0.04458346962928772, 0.017115285620093346, 0.011391675099730492, 0.008146831765770912, 0.005364423152059317, 0.005108519922941923], [0.0008326693787239492, 0.014884065836668015, 0.05902642756700516, 0.05383582413196564, 0.04997469112277031, 0.04321608319878578, 0.041800808161497116, 0.02484920062124729, 0.022737231105566025], [0.0011102259159088135, 0.040364544838666916, 0.0739668682217598, 0.038691144436597824, 0.016285866498947144, 0.010587590746581554, 0.00688437232747674, 0.004258322529494762, 0.004151879344135523]],
[[0.0012269837316125631, 0.02890845015645027, 0.06715486198663712, 0.0329834409058094, 0.012616042047739029, 0.004936812911182642, 0.0024480673018842936, 0.0021105764899402857, 0.0020216184202581644], [0.0008326693787239492, 0.015036160126328468, 0.05918773263692856, 0.05410036817193031, 0.049823079258203506, 0.04300602152943611, 0.042494919151067734, 0.024830389767885208, 0.02287847362458706], [0.0012269837316125631, 0.045982521027326584, 0.06808334589004517, 0.027092885226011276, 0.013079861178994179, 0.004524329677224159, 0.0021768200676888227, 0.0015754580963402987, 0.0007727444171905518]]]
y_fr = [[[0.9993610223642172, 0.9779552715654953, 0.6297124600638977, 0.3319488817891374, 0.1722044728434505, 0.10287539936102237, 0.04952076677316295, 0.03130990415335465, 0.02492012779552717], [0.9996805111821085, 0.9753993610223644, 0.7616613418530351, 0.5507987220447285, 0.3859424920127795, 0.2942492012779553, 0.19616613418530351, 0.12651757188498403, 0.10127795527156551], [0.9993610223642172, 0.9619808306709265, 0.5958466453674122, 0.31405750798722043, 0.15910543130990412, 0.09872204472843452, 0.04856230031948884, 0.029392971246006407, 0.02492012779552717]],
[[0.9993610223642172, 0.9482428115015974, 0.4817891373801917, 0.17795527156549518, 0.06517571884984026, 0.026198083067092648, 0.008945686900958493, 0.004472843450479236, 0.0028753993610223572], [0.9996805111821085, 0.9753993610223644, 0.7619808306709265, 0.5507987220447285, 0.3856230031948881, 0.2942492012779553, 0.19616613418530351, 0.12651757188498403, 0.10127795527156551], [0.9993610223642172, 0.923961661341853, 0.4440894568690096, 0.1642172523961661, 0.06038338658146965, 0.025239616613418538, 0.008626198083067116, 0.004153354632587858, 0.0028753993610223572]],
[[0.9990415335463257, 0.9226837060702875, 0.368370607028754, 0.10383386581469649, 0.030670926517571882, 0.009584664536741228, 0.0015974440894568676, 0.0006389776357827448, 0.00031948881789137793], [0.9996805111821085, 0.9753993610223644, 0.7613418530351437, 0.5507987220447285, 0.3856230031948881, 0.2942492012779553, 0.19584664536741214, 0.12651757188498403, 0.10127795527156551], [0.9990415335463257, 0.893929712460064, 0.33897763578274753, 0.09392971246006387, 0.027476038338658172, 0.00926517571884986, 0.0015974440894568676, 0.0006389776357827448, 0.00031948881789137793]]]
yerr_fr = [[[0.0012779552715655117, 0.01561578199341846, 0.07647003399018283, 0.05086699452986285, 0.03394559293352903, 0.029517723865689686, 0.023704692398146376, 0.02440693834477223, 0.024154706928352445], [0.0009584664536741339, 0.017733787969812034, 0.07079687659790179, 0.06441008670828668, 0.05921843958644172, 0.051087251007935174, 0.049930286506290854, 0.02960060018377117, 0.0272990061693725], [0.0012779552715655117, 0.025537131128936182, 0.07658740735197307, 0.04847499298221035, 0.027364361795992154, 0.030692550949833794, 0.023857066712580786, 0.02436508110535158, 0.024154706928352445]],
[[0.0012779552715655117, 0.030836877985977378, 0.08802830124897357, 0.05263426769915932, 0.02016579404224854, 0.013311608086900741, 0.008428693903049804, 0.0049905748727837995, 0.005041448510562133], [0.0009584664536741339, 0.017733787969812034, 0.07049417781012195, 0.06441008670828668, 0.05927443242125811, 0.051087251007935174, 0.049930286506290854, 0.02960060018377117, 0.0272990061693725], [0.0012779552715655117, 0.04776972189537551, 0.08842397765557856, 0.046456794196277386, 0.019509756729421127, 0.012894847329463622, 0.008337372748051061, 0.005161499815144887, 0.005041448510562133]],
[[0.001464081691679201, 0.03440406549769151, 0.08072452589412768, 0.0388215068196273, 0.014930762230732154, 0.005533708650379788, 0.002575801197539465, 0.0019169329073482342, 0.0009584664536741336], [0.0009584664536741339, 0.017733787969812034, 0.07008466218825478, 0.06441008670828668, 0.05927443242125811, 0.051087251007935174, 0.050070126082845896, 0.02960060018377117, 0.0272990061693725], [0.001464081691679201, 0.0546279167705853, 0.08057771478844458, 0.03227311514165977, 0.015201760068204895, 0.005240006219443037, 0.002575801197539465, 0.0019169329073482342, 0.0009584664536741336]]]

# with loss
y_ea_loss = [[[0.9362699680511183, 0.9290415335463258, 0.9195826677316294, 0.8950319488817892, 0.880223642172524], [0.9026517571884984, 0.8600678913738019, 0.8173063099041533, 0.7700858626198082, 0.7419868210862619], [0.9387959265175718, 0.933604233226837, 0.9244548722044728, 0.903158945686901, 0.8898781948881789]],
[[0.9398861821086262, 0.9386361821086261, 0.9360183706070286, 0.9339117412140576, 0.9263797923322683], [0.9005411341853037, 0.8576577476038338, 0.816449680511182, 0.76928714057508, 0.7330271565495207], [0.9410942492012779, 0.9400439297124599, 0.9375059904153353, 0.9349700479233226, 0.928606230031949]],
[[0.9372603833865816, 0.9369628594249202, 0.93566892971246, 0.9354592651757188, 0.93310303514377], [0.896575479233227, 0.8550758785942492, 0.8181769169329073, 0.7812400159744408, 0.7310962460063897], [0.9410942492012779, 0.9408266773162939, 0.940301517571885, 0.9402815495207667, 0.9376058306709265]]
]
yerr_ea_loss = [[[0.0024085012640782566, 0.005244282372382534, 0.005205461054776181, 0.00853234520531195, 0.01233338828946246], [0.009350502558708791, 0.014452584621002386, 0.016302538782511446, 0.01875815227392269, 0.015275509642008923], [0.0025045134580709283, 0.0049963994304780095, 0.0050843069592940255, 0.007828682178703266, 0.012361321836197285]],
[[0.0010775812022230113, 0.0032839941557516778, 0.003552840991767137, 0.004531217194597313, 0.006998797359316351], [0.012468181114534804, 0.019446805431508066, 0.00864451411587274, 0.013970035730482035, 0.02438218094656445], [0.0, 0.0024399651194046625, 0.0031057098897270003, 0.0037969977715744, 0.007218803709005352]],
[[0.0007527187230419615, 0.0011662931666542187, 0.0009699232896862032, 0.0018180754285057603, 0.004317716954560733], [0.009915122663059741, 0.01084875739341083, 0.015721182951128617, 0.02014320395452631, 0.015206905408050156], [0.0, 0.0008027156549520574, 0.001211191929327927, 0.0012416868915911578, 0.003591108962787554]]
]
y_fr_loss = [[[0.0028753993610223794, 0.00926517571884985, 0.01980830670926519, 0.04536741214057509, 0.0610223642172524], [0.04568690095846646, 0.09648562300319491, 0.1476038338658147, 0.20415335463258785, 0.2370607028753994], [0.0028753993610223794, 0.00926517571884985, 0.01980830670926519, 0.04536741214057509, 0.0610223642172524]],
[[0.0, 0.0012779552715655007, 0.004153354632587869, 0.007348242811501604, 0.014696485623003196], [0.04824281150159746, 0.09904153354632592, 0.14792332268370606, 0.20415335463258785, 0.2476038338658147], [0.0, 0.0012779552715655007, 0.004153354632587869, 0.007348242811501604, 0.014696485623003196]],
[[0.0, 0.00031948881789137793, 0.0009584664536741339, 0.0009584664536741339, 0.004153354632587869], [0.052715654952076675, 0.10287539936102237, 0.14632587859424923, 0.1900958466453674, 0.2501597444089457], [0.0, 0.00031948881789137793, 0.0009584664536741339, 0.0009584664536741339, 0.004153354632587869]]
]
yerr_fr_loss = [[[0.00301405147989029, 0.00596854367165158, 0.005856326766716697, 0.009456005486868221, 0.014741561655027893], [0.010979450656510903, 0.017252396166134176, 0.01899817092309074, 0.022475760175030748, 0.018286374468056463], [0.00301405147989029, 0.00596854367165158, 0.005856326766716697, 0.009456005486868221, 0.014741561655027893]],
[[0.0, 0.0029281633833583708, 0.0035143769968051094, 0.004529535744012084, 0.008476996269278978], [0.014741561655027909, 0.023082928905033148, 0.010601060717595565, 0.015939258381171155, 0.029255477835658506], [0.0, 0.0029281633833583708, 0.0035143769968051094, 0.004529535744012084, 0.008476996269278978]],
[[0.0, 0.0009584664536741337, 0.0014640816916792014, 0.0014640816916792014, 0.004298282443154548], [0.012060438395001202, 0.012843291528589002, 0.01921188035574814, 0.023961661341853034, 0.01846689586788298], [0.0, 0.0009584664536741337, 0.0014640816916792014, 0.0014640816916792014, 0.004298282443154548]]]


y_ea = np.array(y_ea).transpose((1,0,2))*100
y_ea_loss = np.array(y_ea_loss).transpose((1,0,2))*100
y = np.concatenate((y_ea.mean(axis=-1),y_ea_loss.mean(axis=-1)),axis=0)
yerr = np.concatenate((y_ea.std(axis=-1),y_ea_loss.std(axis=-1)),axis=0)

groupedbar(y.transpose((1,0)),yerr.transpose((1,0)),'Effective Top1 Accuracy (%)', 
	'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_ea_comp.eps',)

y_fr = np.array(y_fr).transpose((1,0,2))*100
y_fr_loss = np.array(y_fr_loss).transpose((1,0,2))*100
y = np.concatenate((y_fr.mean(axis=-1),y_fr_loss.mean(axis=-1)),axis=0)
yerr = np.concatenate((y_fr.std(axis=-1),y_fr_loss.std(axis=-1)),axis=0)

groupedbar(y.transpose((1,0)),yerr.transpose((1,0)),'Failure Rate (%)', 
	'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_fr_comp.eps',)

# FCC-2nodes
x = [[0.2*i for i in range(1,10)] for _ in range(3)]
line_plot(x, y_ea[0],['Ours','No replica','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_ea.eps',
		'Deadline','Effective Top1 Accuracy (%)',
		yerr=yerr_ea[0])	
line_plot(x, y_fr[0],['Ours','No replica','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_fr.eps',
		'Deadline','Failure Rate',
		yerr=yerr_fr[0])
# FCC-2 nodes with loss
x = [[0.05*i for i in range(1,6)] for _ in range(3)]
line_plot(x, y_ea_loss[0],['Ours','Standalone','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_loss_ea.eps',
		'Loss Rate','Effective Top1 Accuracy (%)',
		yerr=yerr_ea_loss[0])	
line_plot(x, y_fr_loss[0],['Ours','Standalone','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_loss_fr.eps',
		'Loss Rate','Failure Rate',
		yerr=yerr_fr_loss[0])

plot_computation_dist()

latency_breakdown_mean = [[0.00455909734249115, 0.0005560131160076708, 0.00023642764806747438, 0.04561761306425502],
[0.004631135659217835, 0.0008592742218635976, 0.00022894992828369142, 0.06668495337616376],
[0.004496246471405029, 0.0013584858769550919, 0.0002239444637298584, 0.11089228095896249],
[0.004519511394500733, 0.0025342730802483857, 0.00022607625961303712, 0.19675006694938904],
[0.00478874797821045, 0.005448275371268392, 0.0002342068099975586, 0.3728581001051526],
[0.0048398783412604285, 0.014246439476907482, 0.00023509953349543075, 0.7486890470647757],
[0.004399494304778469, 0.015999999999999365, 0.0002341903698672155, 1.4240682725217528]]

latency_breakdown_std = [[0.00019468925378149094, 5.584275363686788e-05, 1.9531520795695604e-05, 0.017782071823511884],
[0.00017537580325603641, 7.260013062751902e-05, 1.736606173976656e-05, 0.025110829662576592],
[0.00019017245067606885, 9.149818119041286e-05, 1.685588933829107e-05, 0.043189631076095754],
[0.00021328910781494919, 0.00013665798550337163, 1.4873707000809235e-05, 0.07779634547285684],
[0.00019141467146913094, 0.0004524667563076057, 1.677122266685227e-05, 0.1569391868139879],
[0.00021182092754556427, 0.0011024832600207727, 4.049920186137311e-05, 0.34634288409670605],
[0.00015224290905889435, 6.349087922075114e-16, 1.9471022131885656e-05, 0.5982422255192984]]
latency_types = ['N-Map','DCN','N-Reduce','WAN']	
labels = ['1','2', '4','8','16', '32','64']
plot_latency_breakdown(latency_breakdown_mean,latency_breakdown_std,latency_types,labels,
	'/home/bo/Dropbox/Research/SIGCOMM23/images/latency_breakdown_vs_batch.eps',4,(0.5,1.05))


latency_breakdown_mean = [[0.0048398783412604285, 0.014246439476907482, 0.00023509953349543075,0, 0.7486890470647757],
[0,0,0,0.00483251379701657, 1.0169146132483973],
[0,0,0,0.00483251379701657, 0.7486877294765364],
[0.00483693322434593, 0.01415534112563612, 0.00023755364524670683,0, 0.36731984191725175],
[0,0,0,0.00483251379701657, 0.40231160220607187],
[0,0,0,0.00483251379701657, 0.3672657642546315]]

latency_breakdown_std = [[0.00021182092754556427, 0.0011024832600207727, 4.049920186137311e-05,0, 0.34634288409670605],
[0,0,0,0.0002204459821230588, 0.5684324923094014],
[0,0,0,0.0002204459821230588, 0.34634275598435527],
[0.00021391637124477958, 0.00116026010537502, 4.296355214785398e-05,0, 0.03245715259041503],
[0,0,0,0.0002204459821230588, 0.10258664922301183],
[0,0,0,0.0002204459821230588, 0.03245629184215906]]

latency_types = ['N-Map','DCN','N-Reduce','Infer','WAN']	
labels = ['Ours (FCC)','Standalone\n(FCC)', 'Optimal\n(FCC)','Ours (DCQ)','Standalone\n(DCQ)', 'Optimal\n(DCQ)']
plot_latency_breakdown(latency_breakdown_mean,latency_breakdown_std,latency_types,labels,
	'/home/bo/Dropbox/Research/SIGCOMM23/images/latency_breakdown.eps',3,(0.5,1.11))


FCC_latency_list = \
[[0.4760058612695069, 0.5184630058807645, 0.45770194132434516, 0.40342483051801437, 0.41428369551622785, 0.6924662357153831, 0.6220371658009347, 0.45252226390517736, 0.4126139049708361, 0.5670755701171547, 0.6326260308216048, 0.4989845629457286, 0.4129628800151067, 0.7167631852911411, 0.6234709721196698, 0.4731398583866406, 0.41303741740824224, 0.718271910876374, 0.6235932453125682, 0.44812354843724733, 0.4165218865023624, 0.7106846353773144, 0.5560463898432845, 0.4974727626113178, 0.5727630266986529, 0.38711643431094955, 0.3865056098034837, 0.6688002496675665, 0.6767892996688779, 0.4249448579085928, 0.37735389850526546, 0.6588231717568808, 0.5567191046276667, 0.5121610481169285, 0.36447602783942695, 0.6648546519176244, 0.5593110756142438, 0.45620353697096844, 0.37903220348464084, 0.5797469641063799, 0.5960819131911723, 0.45412919357943254, 0.380055335043997, 0.6492344058511847, 0.5694617266909962, 0.42436664811376124, 0.37869003695184605, 0.6608680140723263, 0.9023472748925051, 0.6305483783816417, 0.6065036682313213, 1.1791112550529255, 0.9173444595244681, 0.609915070278949, 0.6223530110085732, 1.2293084884746717, 0.8816427774163011, 0.693472260664865, 0.6703290927165255, 1.1467974320431398, 0.8931140333514943, 0.6440448943877477, 0.6673147006268135, 1.2390072734490725, 0.8894900230565287, 0.6451712501225703, 0.6219681606815223, 0.48076759310787587, 0.5177807902274836, 0.6472520471112609, 0.5661689826206634, 0.5092126524256319, 0.40093290657360287, 0.7344394463421605, 0.602972960835208, 0.48186073578387506, 0.40693684126938023, 0.7047371444619049, 0.5897849869174133, 0.4741572386930643, 0.4586609101650019, 0.7549184880377195, 0.7775187212093221, 0.49245552467770853, 0.4096971283888641, 0.6791697672580919, 0.5904076753594791, 0.4774978095560667, 0.43327332956287157, 0.6820422114595274, 0.7230357866515843, 0.5825236843003304, 0.48511432957813516, 0.40011019527599073, 0.6965910077305322, 0.5884597489834497, 0.45789479230830327, 0.43858219379355395, 0.707676565337075, 0.6601636422814195, 0.5130317690824365, 0.40178346013478605, 0.6869285172047815, 0.6019352570444084, 0.4916666939431548, 0.4136489537702941, 0.6850704162055019, 0.5937767276447754, 0.4842802814378851, 0.451387145305736, 0.6766345938013398, 0.5864538521601584, 0.4761478849519617, 0.4233599162198989, 0.529258623474677, 0.5007074390107921, 0.6060969490005582, 0.8501260986955697, 0.6335712655011556, 0.5030289235605566, 0.45723698564333004, 0.8734654968190374, 0.6386123669065477, 0.48412184695261823, 0.448467903251476, 0.8067097034522058, 0.6933454564026507, 0.6177594807950384, 0.45220867836927575, 0.9390609911976908, 0.9161364194700664, 0.675493824932799, 1.191783397325998, 0.9141176625319564, 0.5587863238979628, 0.5696942700034279, 1.6376450345387226, 1.9369216175188217, 1.8613731618669798, 1.2858048668264583, 2.6004352811211002, 1.870346177997345, 1.2732916252249442, 1.9393089928672858, 1.8605399425157751, 1.2922327716453126, 2.630222344919983, 1.8758085344864273, 1.2785025099347016, 2.646628574558713, 1.8706683952802283, 1.3042960387950493, 2.623811022650707, 1.8682489822718489, 1.297588687463862, 0.9160133448752557, 0.6983347380328027, 0.5275423525230906, 0.6224302696914044, 0.5031238965938287, 0.4351932072754992, 0.5195395288006942, 0.4871821546966541, 0.43035335860292695, 0.6934724669358776, 0.5394738306563662, 1.045839885249508, 0.4319196030443733, 0.6249885292609751, 0.4923472730287568, 0.4885848479333047, 0.40872251960612993, 0.6898280373205051, 0.5549526516970779, 0.49021911243098487, 0.42902732638172164, 0.7437845039191098, 0.5213521751078959, 0.4867026729543078, 0.40964486299700387, 0.5137891459365042, 0.4279068944487509, 0.7544362841204587, 0.6315832016647401, 0.5424514839975266, 0.5658040083209338, 0.707395717066181, 0.5311641487835971, 0.5084433852036404, 0.4163060232366544, 0.7080570722512656, 0.557733300870934, 0.506930654063916, 0.4186516443460161, 0.5251517266456563, 0.6281470742060029, 0.6142968635487452, 0.43849943920999856, 0.7648890506696489, 0.6547510702488899, 0.5185427661839628, 0.41879886654466514, 0.7400960533853039, 0.6716110540082525, 1.603044921881776, 1.0483631001898983, 0.936939991961275, 0.670119512413, 0.6933016239242813, 1.3139389621822588, 0.9386026761521605, 0.6678669388440189, 0.6954840659592939, 1.3379509520205715, 0.9335361971144741, 0.6619991957983066, 0.7037019149237308, 1.2966874844656737, 0.932608367507476, 0.666412578140343, 0.6890003513295941, 1.2389183214400377, 0.942080075110639, 0.6655606347148506, 0.6945629027269783, 1.8823780656981477, 1.3085512818918246, 2.6101771839479984, 1.8531683505676422, 1.2826342150031682, 2.614004388558985, 1.8816748107498908, 1.280535577418596, 2.615354320226629, 1.859900167742321, 1.2817358006157968, 2.609780767869962, 1.8804906596896365, 1.288654371362544, 2.6222695470760407, 1.8632920834384687, 0.8357541149535289, 0.5947473698507038, 0.49428784217625976, 0.5886708260814755, 0.832475291052256, 0.6243827225452088, 0.4879220668691511, 0.6052931608631106, 0.7156876414906569, 0.5479952532677161, 0.5188062121598864, 0.6091156086381367, 0.465518268952793, 0.5646454218168804, 0.48051371170218365, 0.6223873156900669, 0.4728577299374773, 0.4604696873175038, 0.8446479854039843, 0.6231425355651253, 0.4633533712743617, 0.48164305050315465, 0.9120913111002046, 0.5948234856692259, 0.4789547619914936, 0.8043279623061752, 0.4348155392024649, 0.3814645843333592, 0.46071655520064053, 0.5746498863905145, 0.4467780114066016, 0.3681610971943938, 0.4889152041794144, 0.5377220699185419, 0.4485415444575569, 0.3834264970360436, 0.5329273562401476, 0.5548562959806661, 0.44676928457608656, 0.6279102562316506, 0.5221217581388694, 0.45283677748350853, 0.37739878786056924, 0.6861686767179779, 0.5341417370522831, 0.43196370607910406, 0.37608100387630694, 0.6474064346855785, 0.473536619297442, 0.9803289135443563, 0.8039739427153874, 0.6802750813318871, 0.4679522380082462, 0.96104844287284, 0.7880852899309613, 0.5673794146231043, 0.4656419460040707, 0.9478650419227466, 0.746932243221851, 0.49026518417074466, 0.4227957757733364, 0.7766367623013257, 0.5387575595175621, 0.4350245270169031, 0.3654817248242908, 0.6349813497608031, 0.5015656913914215, 0.4319128196334714, 0.3761043886282221, 0.6768261524923112, 0.46586922232997025, 0.394599203196776],
[0.46177169362940945, 0.705908903261914, 0.5434605185528327, 0.4797801059775142, 0.3985105010234333, 0.7119888053091779, 0.6082001165513751, 0.4384814821380698, 0.39863118755738086, 0.7018589983994602, 0.6174429227777479, 0.48382968829496714, 0.39816973093591057, 0.7023722024872525, 0.6083550308270635, 0.45898104068001094, 0.3977132237732181, 0.7022252991677851, 0.6086008763229441, 0.4329007873557157, 0.40112194456063915, 0.6957307660987717, 0.5443631859812358, 0.4823084710087584, 2.6447206904284206, 1.882853104212697, 1.2905929285251714, 2.6325126329082518, 1.8943515549544045, 1.2942815832473926, 2.6364802311027584, 1.8919204136608347, 1.2839690762498346, 2.6351305575274084, 1.8916792643588456, 1.2915241738628738, 2.6305242501523916, 1.8946632731693462, 1.2854123068445034, 2.693894655332689, 1.896871707512895, 1.2964014267405894, 0.6424280151309065, 2.329899006447968, 1.4652515940289939, 0.8619992283455675, 0.6245095853465676, 1.390025922356087, 1.1597951632424686, 0.8235395499891747, 0.5913969549484456, 1.385367846868426, 1.112620286101455, 0.8399721046547377, 0.607010376953741, 1.3738557962507043, 1.1684944283838987, 0.9001804091117289, 0.6581648921768248, 1.4296471728465046, 1.146897427348804, 0.8415819814949878, 0.6557672246899909, 1.650804300361254, 1.136738759207734, 0.9083676660433164, 0.6065669131419648, 0.4658021192008075, 0.5029510959340442, 0.9239210846278871, 0.5506844041788349, 0.49432371553906795, 0.38877905395902873, 0.7198739400906317, 0.5912768933129281, 0.4658752091737092, 0.3917412259125922, 0.6892732381216039, 0.5741733157732706, 0.4594894721751048, 0.44622209822113557, 0.7400730465929426, 0.7645860498588951, 0.47638328384824075, 0.39763211649732766, 0.6637038795290133, 0.5784104128778791, 0.46252280006998747, 0.41759613207577806, 0.6671880843840042, 0.7078308588839574, 0.5670671858162032, 0.4693072903573178, 0.3846467112904773, 0.6817485823739131, 0.5735892960560242, 0.4434115542035724, 0.4243539116464668, 0.6965012445040849, 0.6455152684606006, 0.49823498831086066, 0.38676286683246164, 0.675438926109185, 0.5867324689903967, 0.4791153600776705, 0.39939627853874793, 0.6697020946442473, 0.6002076169421141, 0.4683965263826289, 0.4363470234495904, 0.6618538112889507, 0.5711861111086559, 0.46132219522917783, 0.40785718164447826, 1.4095088830656053, 0.9203424540163119, 0.593830075502111, 0.8356162679552892, 0.6681873530327436, 0.5324695094014298, 0.4422355877141757, 0.944727383968344, 0.7595045248186162, 0.5289235031731286, 0.43346850428981276, 0.7914636746731313, 0.6782396193779023, 0.6021593670148007, 0.4367437224284331, 0.924662951646239, 0.9008897288698873, 0.6603880735897275, 1.1774422233996296, 0.8994330095059045, 0.5443155806497236, 0.553935236153965, 1.626184027944832, 2.583926260569228, 1.8498876443763246, 1.2711356812057257, 2.58504385542583, 1.8555995502269806, 1.2623466742485352, 2.5823672216852755, 1.8485791387518342, 1.2772678535049906, 2.6150390702858006, 1.8599502864938446, 1.2634660523672259, 2.631621548996486, 1.8558766523817045, 1.2900990350002153, 2.6084389661366822, 1.8539414789161819, 1.2821963997131336, 0.9009701743346621, 0.6840067207840306, 0.5122048018597013, 0.9039289576861504, 0.7594717069299978, 0.5592088618348925, 0.5046343076224978, 1.0957334235230598, 0.9373927126566834, 0.7004669046945454, 0.5240273254962953, 1.0635387359682507, 0.889581463530148, 0.6135825205247447, 0.4770812168562071, 1.0581134600246522, 0.7556186258674014, 0.6737950754248158, 0.5395073885720755, 1.1451062753692005, 0.899630201282947, 0.7581009131002553, 0.5064518623489137, 1.0342911897568225, 0.7071371865432783, 0.5198461990919243, 1.6885385190117264, 0.9431185211857445, 0.6938307282739626, 0.5288860061499322, 0.9833932325695546, 0.692112777295922, 0.5165188411095244, 1.4931582032094035, 0.9475702063621758, 0.6919832867618405, 0.5425678636251925, 1.529636146704818, 0.9613785486467469, 0.5138772143705342, 1.3520601235218084, 0.9149742384443225, 0.5406524770154456, 1.3626343638713883, 0.9748142357684122, 1.5591592369695049, 1.3109175163340259, 0.9267826564556373, 0.6566583389876257, 1.58855948259614, 1.2853176994729505, 0.9211769897463217, 0.6556503115513598, 1.6512167397868889, 1.2989949599171482, 0.9234530446146635, 0.6528850965934557, 1.5807722764162913, 1.3240475956304976, 0.9186085946249952, 0.6474715717909921, 1.634105955205835, 1.2808018419688048, 0.9205984017859582, 0.6515226343776607, 1.6061542321025044, 1.224164142739069, 0.9296158153594979, 0.65048449151341, 2.9878951906850686, 1.9952690653227858, 1.2931411434813085, 2.5954414314641685, 1.8389851593343276, 1.3846942397747548, 2.6049459288124877, 1.867887527913629, 1.367092805816121, 2.600110126618688, 1.847923506698148, 1.36185635137708, 2.595870079177258, 1.8870918512683479, 1.4136435409595054, 2.6072528617196546, 2.0340848093207775, 0.8203738447564727, 0.5802088665987339, 1.4133755179009084, 0.5773783277555464, 1.3999028701873595, 1.112756157127065, 0.8217572839671912, 0.5907288933870213, 1.330338574047359, 1.114016076045458, 0.8195640260413083, 0.5945609660316101, 0.4517575120187314, 1.3306102115942875, 0.9109353873937999, 0.6071623657676543, 0.45762817695323965, 1.3570390123271645, 0.9030757576091559, 0.6075225113888109, 0.4476276985636748, 1.2829695212466643, 0.8970867741483125, 0.6095450842887439, 0.4634846603770109, 1.3020523537343354, 0.9092466929157618, 0.6029063519167956, 0.44495036250737724, 1.2051261136284674, 0.9428431673669544, 0.6109670199037888, 0.47358771517587533, 1.2901232528792905, 0.921214877496132, 0.9571808004203043, 0.5173633448302689, 1.0302601480052027, 0.8445335952160947, 0.6591636497580124, 0.5191424242234369, 0.9534010804015979, 0.8335246943338528, 0.671044272497136, 0.5191736518331308, 0.9555638896699086, 0.8314729604922192, 0.6591172421964282, 0.5173512141958119, 0.9653617430003876, 0.835255765184906, 0.6655098642465181, 0.5192674768443852, 0.9485953736609248, 0.8387297350185122, 0.6587752461022954, 0.5223908561854289, 0.9840821380995031, 1.4047476165148103, 0.4748110412342393, 0.4084275280668933, 0.762112614455521, 0.5238013472642523, 0.4204083143257227, 0.351048854390625, 0.6199095748114835, 0.4865260049285796, 0.41954944609871747, 0.36129965238279854, 0.6651090590823407, 0.451342823943164, 0.37884700129688986],
[0.46177169362940945, 0.5046815812689577, 0.4424244930976474, 0.38907836644659155, 0.3985105010234333, 0.6777674662838219, 0.6082001165513751, 0.4384814821380698, 0.39863118755738086, 0.5543935409546211, 0.6174429227777479, 0.48382968829496714, 0.39816973093591057, 0.7023722024872525, 0.6083550308270635, 0.45898104068001094, 0.3977132237732181, 0.7022252991677851, 0.6086008763229441, 0.4329007873557157, 0.40112194456063915, 0.6957307660987717, 0.5443631859812358, 0.4823084710087584, 0.5578290188053364, 0.37283542067968767, 0.3710460568141424, 0.654874381348219, 0.6613392404654469, 0.41010239099170387, 0.36270369288935755, 0.6431244022778221, 0.5404899676642918, 0.49666747065430744, 0.3491152742054137, 0.6495846717338218, 0.5439190920567513, 0.44415226767534305, 0.36403163734296096, 0.5648344612662186, 0.5801189647505982, 0.43966941001883614, 0.3678053606264968, 0.6336768069464782, 0.5539366322247122, 0.40928293710149466, 0.36393079616343843, 0.6453108601069798, 0.8866512433854005, 0.6180196847289299, 0.5913969549484456, 1.164090412854643, 0.9023111122251456, 0.5983894087107916, 0.607010376953741, 1.21402132084917, 0.8671071632433731, 0.6783841613770422, 0.6581648921768248, 1.1317307220916422, 0.8777943887615859, 0.6288069519333426, 0.6557672246899909, 1.22377650869775, 0.8744262099838994, 0.6299834581082396, 0.6065669131419648, 0.4658021192008075, 0.5029510959340442, 0.6320391595624194, 0.5506844041788349, 0.49432371553906795, 0.38877905395902873, 0.7198739400906317, 0.5912768933129281, 0.4658752091737092, 0.3917412259125922, 0.6892732381216039, 0.5741733157732706, 0.4594894721751048, 0.44622209822113557, 0.7400730465929426, 0.7645860498588951, 0.47638328384824075, 0.39763211649732766, 0.6637038795290133, 0.5784104128778791, 0.46252280006998747, 0.41759613207577806, 0.6671880843840042, 0.7078308588839574, 0.5670671858162032, 0.4693072903573178, 0.3846467112904773, 0.6817485823739131, 0.5735892960560242, 0.4434115542035724, 0.4243539116464668, 0.6965012445040849, 0.6455152684606006, 0.49823498831086066, 0.38676286683246164, 0.675438926109185, 0.5867324689903967, 0.47727843793534935, 0.39939627853874793, 0.6697020946442473, 0.5823918153439205, 0.4683965263826289, 0.4363470234495904, 0.6618538112889507, 0.5711861111086559, 0.46132219522917783, 0.40785718164447826, 0.5137327734729544, 0.4853871172329566, 0.593830075502111, 0.8356162679552892, 0.6182835713291532, 0.49110248059376016, 0.4422355877141757, 0.8582921323883714, 0.6241291612816916, 0.4691884382489632, 0.43346850428981276, 0.7914636746731313, 0.6782396193779023, 0.6021593670148007, 0.4367437224284331, 0.924662951646239, 0.9008897288698873, 0.6603880735897275, 1.1774422233996296, 0.8994330095059045, 0.5443155806497236, 0.553935236153965, 1.626184027944832, 1.9221293137312774, 1.8498876443763246, 1.2711356812057257, 2.58504385542583, 1.8555995502269806, 1.2623466742485352, 1.9241173418014519, 1.8485791387518342, 1.2772678535049906, 2.6150390702858006, 1.8599502864938446, 1.2634660523672259, 2.631621548996486, 1.8558766523817045, 1.2900990350002153, 2.6084389661366822, 1.8539414789161819, 1.2821963997131336, 0.9009701743346621, 0.6840067207840306, 0.5122048018597013, 0.6078965160681498, 0.4872817348704161, 0.4199085077712355, 0.5046343076224978, 0.47252170138921173, 0.41661110239181004, 0.6787981273760171, 0.5240273254962953, 1.0306557135188557, 0.41714877066595607, 0.6135825205247447, 0.4770812168562071, 0.47267494483261296, 0.39407616605680595, 0.6737950754248158, 0.5395073885720755, 0.47488098167004694, 0.4174084465251799, 0.7293962358041108, 0.5064518623489137, 0.4721525272388327, 0.39525037399645246, 0.4988884332908915, 0.4125988968625453, 0.739938849865723, 0.619007084368037, 0.5288860061499322, 0.5544051257157984, 0.692112777295922, 0.5165188411095244, 0.493542356490429, 0.4014417753622976, 0.6919832867618405, 0.5425678636251925, 0.49181010074550496, 0.4036264210899273, 0.5138772143705342, 0.6126960359497153, 0.5996618797018275, 0.4261501117658997, 0.7494956029566537, 0.6401396722625896, 0.5029563675256201, 0.40419807178229217, 0.7259705240578741, 0.6566583389876257, 1.58855948259614, 1.0337564348356763, 0.9211769897463217, 0.6556503115513598, 0.6788573785495198, 1.2989949599171482, 0.9234530446146635, 0.6528850965934557, 0.6803031253358988, 1.3240475956304976, 0.9186085946249952, 0.6474715717909921, 0.6877806291985321, 1.2808018419688048, 0.9205984017859582, 0.6515226343776607, 0.6748703713279955, 1.224164142739069, 0.9296158153594979, 0.65048449151341, 0.6798655984986576, 1.8675351185680562, 1.2931411434813085, 2.5954414314641685, 1.8389851593343276, 1.2669662887158897, 2.5995623563559067, 1.867299208738322, 1.265816880245075, 2.600110126618688, 1.847923506698148, 1.2662768168973793, 2.595870079177258, 1.864768785727316, 1.2741161080425525, 2.6072528617196546, 1.848819976966811, 0.8203738447564727, 0.5802088665987339, 0.4793704071681586, 0.5773783277555464, 0.8216309137170951, 0.609353613927754, 0.47338669344310863, 0.5907288933870213, 0.7003542844564058, 0.5327785851312983, 0.5026445861878688, 0.5945609660316101, 0.4517575120187314, 0.5496259062876054, 0.4662233362999864, 0.6071623657676543, 0.45762817695323965, 0.4465912413615791, 0.8298362091748039, 0.6075225113888109, 0.4476276985636748, 0.46608690318109597, 0.8970867741483125, 0.5801185662490432, 0.4634846603770109, 0.7882118705574757, 0.4182703791109828, 0.3681999112698277, 0.44495036250737724, 0.5596247025992198, 0.4325184186602172, 0.35286311027812745, 0.47358771517587533, 0.5227520012151363, 0.43330634288548886, 0.3685863421274461, 0.5173633448302689, 0.5400676362255256, 0.4318976237232818, 0.6122262908234074, 0.5106984786075693, 0.43813097493669445, 0.36563616825993794, 0.671044272497136, 0.5191736518331308, 0.41690361445506763, 0.3640619494941988, 0.6331120668199192, 0.46159673688023256, 0.9653617430003876, 0.7887998042392466, 0.6655098642465181, 0.4557133089600656, 0.9485953736609248, 0.7757962608505405, 0.5534114358550536, 0.4513051256614927, 0.9343989304219991, 0.7349616391504574, 0.4748110412342393, 0.4084275280668933, 0.762112614455521, 0.5238013472642523, 0.4204083143257227, 0.351048854390625, 0.6199095748114835, 0.4865260049285796, 0.41954944609871747, 0.36129965238279854, 0.6651090590823407, 0.451342823943164, 0.37884700129688986]]

measurements_to_cdf(FCC_latency_list,'/home/bo/Dropbox/Research/SIGCOMM23/images/FCC_cdf.eps',['Ours','Standalone','Optimal'])

DCQ_latency_list = \
[[0.38621459850236306, 0.38969723108422727, 0.3874428239669214, 0.38474708020640946, 0.38737561996886893, 0.36856286790433046, 0.3970409376545887, 0.4440456426020205, 0.3901929395737227, 0.3834776978636967, 0.44668184450344484, 0.3852412178972208, 0.38164020024154954, 0.36910845703394557, 0.3865675333872111, 0.38364132114766925, 0.382887724203016, 0.367655499182467, 0.3848334541059728, 0.38558212549088466, 0.37337781710957074, 0.44231363796106393, 0.38521096700333146, 0.378961140497438, 0.38366051249961686, 0.389509321524832, 0.3797480783151972, 0.36599754748354135, 0.38238186675282826, 0.39056804331767125, 0.37001012063275246, 0.3851778818142577, 0.38241023787224293, 0.38172594426120554, 0.38137749788109687, 0.38415662698898245, 0.38984416992064297, 0.38829725854563435, 0.38674934580475906, 0.38603018157307994, 0.3898976014326365, 0.380689801387657, 0.3811737505100439, 0.38430665973270806, 0.3849060483084372, 0.36563479225682377, 0.3861232224622313, 0.4470724282905713, 0.3680059982533486, 0.3671595616008539, 0.38400950709853987, 0.38651491225135715, 0.3884928573470461, 0.3803343313839172, 0.38257977915384345, 0.37931946781377585, 0.3644252658527165, 0.38937187572346943, 0.3883678735129656, 0.3878225013869212, 0.39017178412828457, 0.36778609110798755, 0.3763130838160933, 0.39127252604245655, 0.3751566604315144, 0.38735245592425827, 0.3812298774140288, 0.3843854760501415, 0.3878217505071859, 0.38604463371888187, 0.38533304556318626, 0.38188991306935804, 0.386471218146319, 0.3671417708925233, 0.3794791519796803, 0.38612191280219577, 0.3860494629747109, 0.3637307040153246, 0.38499870679547143, 0.38624109737428114, 0.3656475527938028, 0.38697552679499836, 0.38421800457931, 0.3854172893219019, 0.3670809039451228, 0.3845672081310738, 0.3809393193291726, 0.3912785153380085, 0.38148136490633533, 0.3684545474019387, 0.36471053477055193, 0.38400136012523944, 0.39763445807747644, 0.3820929670255566, 0.383582107451673, 0.3901219583296438, 0.3856480736682073, 0.3760462093474004, 0.3840284112114887, 0.37279689660255855, 0.36538995466818136, 0.36948521251741795, 0.3887330584261619, 0.3858302659823565, 0.38656493555052407, 0.38289274607740253, 0.4380466475958045, 0.3791608302621512, 0.36988739706136187, 0.38490317659881157, 0.38352858110167176, 0.38448708708992285, 0.38535254506983563, 0.3845259096906375, 0.3770510724287135, 0.3816827310189126, 0.3709803691129139, 0.3846359706786302, 0.3841829969658406, 0.36387109684386587, 0.3736951876477832, 0.3912039783297132, 0.38378505170200583, 0.384656999302905, 0.39141527548009236, 0.3885037929544879, 0.3806547438088117, 0.6669991256708556, 0.38335818201395, 0.389469826775084, 0.37685367008072035, 0.3684842341910155, 0.38436240077842143, 0.3871842196005204, 0.3815779406128641, 0.3742791896698634, 0.38163584269179296, 0.3898608904876255, 0.3811245397688552, 0.3711625939716612, 0.36459796834961367, 0.3857607065436781, 0.3763504946775811, 0.38259261739747785, 0.37923478593720006, 0.3831580038362006, 0.38964566424465374, 0.384595267410873, 0.3916411325779734, 0.3684845305518536, 0.3833890023437192, 0.38457768106627555, 0.3848255322778016, 0.3849687546601075, 0.38668426969476855, 0.3806102514274414, 0.38598598300023923, 0.3793321058211063, 0.36915158977475926, 0.37677744277542047, 0.38687350688063304, 0.38696552337074763, 0.38419050553864054, 0.3797313886156388, 0.3859418971626525, 0.39122288840762565, 0.3855961340063061, 0.38398252870581473, 0.3896805615024732, 0.38858918492621797, 0.380504257089342, 0.3909481368592651, 0.3852851226165228, 0.36931154636609165, 0.38421821392878996, 0.38035760826574005, 0.38574393882251456, 0.3700953121991688, 0.38731375091700215, 0.3882569080448661, 0.38932944419789806, 0.3868300478561082, 0.37703077863722, 0.3860824768629527, 0.3825378239612576, 0.710502080112505, 0.3823717912944318, 0.38554171696094386, 0.3903313283555292, 0.38237946119760124, 0.3851461816377366, 0.3863382780750726, 0.3856943841367695, 0.394281227820656, 0.38300125479049996, 0.365130981638373, 0.3654269454396797, 0.6678466505485972, 0.38542946798942523, 0.3825482378602203, 0.38743401533032795, 0.44067760979920934, 0.3849023757246357, 0.3711267663511819, 0.3880914850162327, 0.3827686080957733, 0.3677085841129042, 0.38851733091439655, 0.3755534007698884, 0.3833087252464793, 0.3828896543490288, 0.38370478931781804, 0.38268122704882046, 0.3832412432614092, 0.38351736058407937, 0.37122171155255046, 0.3963508094484496, 0.38270162636698046, 0.38785495825996463, 0.3855928763234715, 0.3644105726983753, 0.3826574375201801, 0.37045847391803477, 0.3830928065529804, 0.3873472947983885, 0.37099964769905114, 0.38291058620238516, 0.3876176081027154, 0.3830855805996407, 0.38396219345378313, 0.3857800185006681, 0.384120705680715, 0.3823096952212808, 0.3703684857069476, 0.37433604465793735, 0.39257892481936096, 0.3671292791162841, 0.36724485462630696, 0.3819149199741787, 0.38496676446686706, 0.3864114434638992, 0.3870443516867681, 0.3881132241080536, 0.3867239464830732, 0.38107653327290336, 0.3803500688024428, 0.3859980938821508, 0.36988874531289184, 0.38455283396012874, 0.3683702764752752, 0.37950726688347913, 0.3922441430907355, 0.38755479893274014, 0.387142129449785, 0.3815759766119413, 0.3861067518826644, 0.37447613496016174, 0.3812737270631601, 0.38154375051597356, 0.36922395551930265, 0.3661914927279497, 0.38712621230405375, 0.3826042778004961, 0.3846335886752854, 0.3885081970882993, 0.3833636244044669, 0.3682421038336656, 0.3840301078759012, 0.3849483616621683, 0.3807907992148216, 0.38251238476482285, 0.38388219244311017, 0.3904964237452191, 0.36613002190148336, 0.3853490661961132, 0.3827320320241938, 0.3911262393775985, 0.38585968694997064, 0.389025153690298, 0.38650408339884734, 0.37414734533683713, 0.3675156052074158, 0.36919126211137154, 0.3764027503074203, 0.3655348984761133, 0.3813662064427774, 0.3885246364681052, 0.3800590050504411, 0.37066582945180926, 0.38294890219259514, 0.38312281274119186, 0.3667486558292694, 0.3826671425726431, 0.38290092772908224, 0.37199873850101994, 0.3908509034028498, 0.3845436496037564, 0.3870739826593308, 0.37941496230030225, 0.36424739803163675, 0.38500335197329605, 0.38268130178101956, 0.3839422128934302, 0.4451825398896574, 0.6754619453365649, 0.38707437102877407, 0.36661796788536094, 0.38210709614642724, 0.3779395217111414, 0.383011383557573, 0.36424144438518624, 0.3771705786466839, 0.38738263980570764],
[0.391876276664917, 0.3773939314724122, 0.3791829997402345, 0.37781382313500966, 0.37160242547607436, 0.37253951447277833, 0.38320388840502906, 0.49382979695910656, 0.5969326263732908, 0.8176507937011719, 0.6430493747711186, 0.37008634324645934, 0.3668470511623534, 0.37381866239184536, 0.3714515920946048, 0.3694825034410396, 0.373414385543823, 0.3516088874738781, 0.3769041665645751, 0.37276378084545847, 0.3579778751678475, 0.4349633478847661, 0.3737932237623287, 0.3749980883558344, 0.36863091191101205, 0.37544642841357323, 0.36405847048913564, 0.35093882455444364, 0.3679139246900629, 0.3767382014007552, 0.35515469238317726, 0.37103265433520427, 0.3666221278991699, 0.6972388657985835, 0.36995148619860885, 0.3703125208051751, 0.37581026538867235, 0.37579099024999957, 0.3742210716630865, 0.3715131733625476, 0.3776254039920666, 0.364826899925415, 0.3738294430925287, 0.36877226892089965, 0.3746858288421641, 0.35178137559509187, 0.37271939867382997, 0.4315892720947296, 0.35438738547497556, 0.3537695553361822, 0.37121508275586024, 0.44822165305309974, 0.3771922600477318, 0.36508821354712145, 0.3764278069078344, 0.3641774007110605, 0.34844529935473645, 0.3784401094356689, 0.3762036729732649, 0.3734118744354262, 0.37518989158630234, 0.354031723861695, 0.3647656078792707, 0.3763948032911379, 0.3692140553588849, 0.37172091390991463, 0.3671271083295906, 0.370188483428958, 0.37299205621374654, 0.37347262117004476, 0.3742860209886487, 0.37117722692834576, 0.3743173655317449, 0.35257626464099445, 0.3677830844574004, 0.37059012824975923, 0.37085384761792284, 0.662964395225707, 0.7015730973666975, 0.3715733308563216, 0.37067782049560805, 0.3721300853502214, 0.371285333228883, 0.3693450484924341, 0.37712131200390075, 0.4296202972181433, 0.376020526519774, 0.3763035058519293, 0.4258548795854509, 0.3536004203264156, 0.373460836052125, 0.3685448616411122, 0.6976156790618903, 0.36662948304004317, 0.378779063987551, 0.3754008175197754, 0.37116483556347646, 0.36181792720031325, 0.6952890860900851, 0.3581485227817396, 0.3505931738966055, 0.4260349103393537, 0.37724346733056535, 0.3706274779283447, 0.37607517854272743, 0.36959179399072184, 0.4226783260345499, 0.6916862089613075, 0.3540036420061057, 0.3704445105360108, 0.39514988328588885, 0.37221281765746994, 0.37052685534705176, 0.3727628780290573, 0.38091497342700364, 0.372261867241086, 0.36678973012524096, 0.37012613993834975, 0.36984236041259777, 0.43202340387707494, 0.35869378971862886, 0.3771881968990485, 0.3737138040771484, 0.3750227565992432, 0.3764158765184291, 0.37325776417541334, 0.3655489067840634, 0.6986460020290508, 0.3729689638061515, 0.3750717872236322, 0.3650876311340312, 0.3722718997799106, 0.3700212268520531, 0.3724995665744686, 0.36710719736462494, 0.3683333982618393, 0.37017483609790247, 0.42305458670006857, 0.3696390222782, 0.6721222757263162, 0.6928280353319138, 0.3710140787733138, 0.36540554370117206, 0.37054567433166596, 0.3689463117143674, 0.37625792668151803, 0.3744623896104713, 0.37027106731433435, 0.37660467501049766, 0.3534775049896268, 0.3685972594451954, 0.3764282329402988, 0.4277730030134279, 0.3706612513044405, 0.3718015044935328, 0.36556708088684786, 0.37165796575146715, 0.4316779539798574, 0.37337471015149504, 0.3701976130519995, 0.37132606765747767, 0.4307816552585422, 0.3708781342312051, 0.36520249614697775, 0.3710022988891666, 0.3757763832475547, 0.37038889935266184, 0.3762684043273907, 0.42693831500281476, 0.37332312875366824, 0.37323218798864843, 0.3766188663099399, 0.36925216072083344, 0.35386628324108926, 0.42371029216783995, 0.3702378114091829, 0.4331107127075313, 0.37707872057325176, 0.6564553972015403, 0.43173716904431103, 0.37380621435582384, 0.3710723163448506, 0.36555949967174683, 0.37126429685974927, 0.36989400286083196, 0.6951808220062361, 0.3670888515241728, 0.3708964092868712, 0.37467594069690335, 0.3678626653286159, 0.36907239614831155, 0.4783939218444857, 0.6595774558183649, 0.3796126583862218, 0.37172674251537785, 0.37118573538207045, 0.3494391863328872, 0.6587592401045015, 0.3697440012891917, 0.3732763818739073, 0.372635494964598, 0.4264149818725542, 0.37674668039721837, 0.35617405133055513, 0.37360604573059675, 0.370686400741576, 0.36936551109350546, 0.37542700057983325, 0.36431273939514597, 0.3721437783962358, 0.36774002281153173, 0.36872294706725484, 0.368160668403803, 0.3693378868713353, 0.3685897580946005, 0.3594271235120914, 0.3815389485853302, 0.37440859735143306, 0.37584499253844683, 0.37108493905640216, 0.3770996766967869, 0.3679032588192115, 0.3740268561099924, 0.36868037983667534, 0.6894051565700607, 0.3720122845689673, 0.3675004477918691, 0.37343284342993854, 0.36890238936632613, 0.3707624331665045, 0.37540623629760717, 0.3687929515994881, 0.3703285974727777, 0.3551242920990063, 0.3623593836137644, 0.37757438402576327, 0.3532185904235803, 0.352305601058589, 0.3770917826541762, 0.3751586738738979, 0.37397610453832897, 0.38113552179737553, 0.4291122253875841, 0.3758370524749779, 0.37600621732312334, 0.36642148346729186, 0.3705841463623045, 0.6964269968868422, 0.3846773808366635, 0.36687492044103465, 0.3767374327470776, 0.3772218296356158, 0.37943831596338384, 0.3736214650953258, 0.6635917530826418, 0.6662485004804779, 0.36901741143799427, 0.4242741569898669, 0.3702208789669186, 0.35363091583251105, 0.35057146855163523, 0.373506078437984, 0.3702517964324983, 0.3716893424838901, 0.3733213444292005, 0.3719248719713164, 0.3721910120849685, 0.3704404057844215, 0.43031560559863635, 0.6592929661024272, 0.3767486589735114, 0.36954373017883313, 0.7344755198289761, 0.3508025328979443, 0.36922938431530383, 0.694733705452137, 0.3749767847438932, 0.37390664949035113, 0.3734521260301591, 0.3735685065460217, 0.36011529692858346, 0.696914908676149, 0.3714269165645874, 0.6652200467067928, 0.3504104942552715, 0.36639812122362514, 0.37359214115906525, 0.36689436766832273, 0.3725968355861937, 0.3701368117753816, 0.3712930374301777, 0.35267037843323124, 0.37261044165074964, 0.37012777412414266, 0.6563160429382435, 0.3759517940290493, 0.36893046936779683, 0.37219279728697074, 0.3666610587995649, 0.3728182109601903, 0.3837678084869367, 0.3720360085370942, 0.3709782861097324, 0.4302263276363476, 0.6640250317688015, 0.37264150059510825, 0.6641899168704697, 0.3670674096835853, 0.7021320628967374, 0.369698756072637, 0.35252435097521584, 0.36264418025987766, 0.3776311769483698],
[0.371115776664908, 0.3759158064724204, 0.3721653757402237, 0.37040061613498665, 0.37160242547607436, 0.35386409847276923, 0.38320388840502906, 0.4296268799591303, 0.3757430013733085, 0.3707956687011631, 0.43232670877111445, 0.37008634324645934, 0.3668470511623534, 0.3580169123918324, 0.3714515920946048, 0.3694825034410396, 0.36734646954383265, 0.3516088874738781, 0.37026366656456844, 0.37053803084546644, 0.3579778751678475, 0.4269617658847835, 0.3710665157623225, 0.36710592135585784, 0.36863091191101205, 0.37544642841357323, 0.36405847048913564, 0.35093882455444364, 0.3679139246900629, 0.3757255764007823, 0.35515469238317726, 0.36947911233519903, 0.3666221278991699, 0.3662323667985845, 0.36995148619860885, 0.3688866468051799, 0.37581026538867235, 0.37579099024999957, 0.3717487796630792, 0.3715131733625476, 0.3739346529920624, 0.364826899925415, 0.3689237760925437, 0.36877226892089965, 0.3693809538421533, 0.35178137559509187, 0.3713639816738237, 0.4315892720947296, 0.35438738547497556, 0.3537695553361822, 0.36895716675587664, 0.37149407005307467, 0.3734595100477236, 0.36508821354712145, 0.3669677229078161, 0.3641774007110605, 0.34844529935473645, 0.3742837764356466, 0.3762036729732649, 0.3727557914354236, 0.37518989158630234, 0.354031723861695, 0.3647656078792707, 0.376041761291134, 0.36009284735888514, 0.37172091390991463, 0.3670205253295933, 0.36839131642895495, 0.37299205621374654, 0.37083174617004033, 0.3700988949886437, 0.36775385292833107, 0.3743173655317449, 0.35257626464099445, 0.3677830844574004, 0.3702179622497397, 0.37085384761792284, 0.35263156222572434, 0.3703590133667092, 0.3715733308563216, 0.3511356954956, 0.3721300853502214, 0.371285333228883, 0.3693450484924341, 0.35241243800390976, 0.36962267221812795, 0.3659753595197799, 0.3763035058519293, 0.36628587958546177, 0.3536004203264156, 0.3500827940521276, 0.3685448616411122, 0.38322117906190556, 0.36662948304004317, 0.3691947729875551, 0.3754008175197754, 0.37116483556347646, 0.36181792720031325, 0.3685178780900742, 0.3581485227817396, 0.3505931738966055, 0.35387520133934913, 0.37724346733056535, 0.3706274779283447, 0.3721766795427186, 0.3673772949907175, 0.4226783260345499, 0.3677759179612963, 0.3540036420061057, 0.36965688553601694, 0.36859175828587354, 0.37221281765746994, 0.37052685534705176, 0.36997871102903446, 0.3615252224269909, 0.3663624092410771, 0.3564203141252449, 0.37012613993834975, 0.36984236041259777, 0.3519446538770694, 0.35869378971862886, 0.37603061389904724, 0.3693018460771498, 0.36972359059925, 0.3764158765184291, 0.37325776417541334, 0.3655489067840634, 0.6521649610290581, 0.367765213806166, 0.3750717872236322, 0.3631513401340385, 0.3545490677799137, 0.3700212268520531, 0.3724995665744686, 0.36710719736462494, 0.3593281902618344, 0.37017483609790247, 0.37506858670008114, 0.3696390222782, 0.3552512757263173, 0.348878451331899, 0.3710140787733138, 0.36540554370117206, 0.367400966331644, 0.3644366857143666, 0.3685686766815195, 0.3744623896104713, 0.3690641503143297, 0.37660467501049766, 0.3534775049896268, 0.3685972594451954, 0.3697348169403085, 0.370547753013426, 0.3706612513044405, 0.3715362964935309, 0.36556708088684786, 0.37165796575146715, 0.368315161979865, 0.35461783615150466, 0.3609352810520079, 0.37132606765747767, 0.3711544042585615, 0.36953005223119817, 0.36520249614697775, 0.3710022988891666, 0.3757763832475547, 0.37038889935266184, 0.3692116963273975, 0.3746672310028316, 0.37332312875366824, 0.36459435398865025, 0.37630178330994113, 0.36925216072083344, 0.35386628324108926, 0.36888008316785204, 0.3687387284091983, 0.37135567070751563, 0.35466559657322705, 0.37276360520152707, 0.3738624190443147, 0.37380621435582384, 0.3710723163448506, 0.36555949967174683, 0.37126429685974927, 0.3694052948608544, 0.6951808220062361, 0.3670888515241728, 0.3708964092868712, 0.37467594069690335, 0.3678626653286159, 0.36907239614831155, 0.37031071284445716, 0.3705738308183584, 0.3796126583862218, 0.37053853451536156, 0.3496799433820854, 0.3494391863328872, 0.6554973231044983, 0.3697440012891917, 0.36793683987392, 0.372635494964598, 0.4264149818725542, 0.3707768463972059, 0.35617405133055513, 0.3734884207305811, 0.36816194274155123, 0.3526915110934965, 0.37343012557983, 0.3611091553951269, 0.37058607039625713, 0.36774002281153173, 0.36872294706725484, 0.368160668403803, 0.3693378868713353, 0.3685897580946005, 0.3558921245120814, 0.3815389485853302, 0.3677323043514491, 0.37584499253844683, 0.37108493905640216, 0.3502805926967767, 0.3679032588192115, 0.35555110510998134, 0.3681066718366708, 0.37264999057006776, 0.35615670056895965, 0.3675004477918691, 0.37277463442993053, 0.36890238936632613, 0.3682942671665046, 0.37133798629758985, 0.3687929515994881, 0.3703285974727777, 0.3551242920990063, 0.3623593836137644, 0.37757438402576327, 0.3532185904235803, 0.352305601058589, 0.3673766566541872, 0.3695256318738984, 0.37397610453832897, 0.3744689797973706, 0.3723399343875258, 0.371806511474972, 0.36634334332313756, 0.36642148346729186, 0.3705841463623045, 0.35535337188684935, 0.3694149218366647, 0.3530369194410241, 0.36429059874706127, 0.3772218296356158, 0.37374689996335064, 0.3723695490953105, 0.3665564610826664, 0.37181637648046717, 0.3592788284379935, 0.3668537819898461, 0.3702208789669186, 0.35363091583251105, 0.35057146855163523, 0.37146391143795654, 0.3702517964324983, 0.37049442548385514, 0.3733213444292005, 0.36871432997128295, 0.3521260120849661, 0.3674849477844191, 0.37168368859863676, 0.3650339251024093, 0.36748720097352816, 0.36954373017883313, 0.3751984368289527, 0.3508025328979443, 0.36922938431530383, 0.3674968304521258, 0.3749767847438932, 0.3696575664903321, 0.3734521260301591, 0.37163242254604256, 0.3584633799285939, 0.3560923256761157, 0.35448545956455746, 0.364640130706789, 0.3504104942552715, 0.36639812122362514, 0.37359214115906525, 0.36689436766832273, 0.35637146158614996, 0.3701368117753816, 0.3689734534302147, 0.35267037843323124, 0.3685182746507394, 0.37012777412414266, 0.35767504293824004, 0.3759517940290493, 0.36893046936779683, 0.37219279728697074, 0.36594885079955475, 0.35227679396024314, 0.37014205848697657, 0.3685670505371377, 0.3695697861097642, 0.4302263276363476, 0.6601143227687771, 0.37264150059510825, 0.35251758287046187, 0.3670674096835853, 0.36300639589671846, 0.36953771507262445, 0.35252435097521584, 0.36264418025987766, 0.3729055939483601]]

measurements_to_cdf(DCQ_latency_list,'/home/bo/Dropbox/Research/SIGCOMM23/images/DCQ_cdf.eps',['Ours','Standalone','Optimal'])

analyze_all_recorded_traces()

# stds
# x = [[0.2*i for i in range(1,10)] for j in range(3)]
# Ys = [[[0.10000000894069672, 0.10000000894069672, 0.10000000894069672, 0.1234465017914772, 0.6602116823196411, 0.9398621320724487, 0.9406648874282837, 0.9406648874282837, 0.9406648874282837], [0.10000000894069672, 0.10136783123016357, 0.13034744560718536, 0.314656525850296, 0.6960063576698303, 0.9076517820358276, 0.9391552805900574, 0.9402056932449341, 0.9402056932449341], [0.10543131828308105, 0.13269570469856262, 0.23529751598834991, 0.44761180877685547, 0.7098841667175293, 0.8775140047073364, 0.9340116381645203, 0.9398581385612488, 0.9401257634162903], [0.13414138555526733, 0.19298923015594482, 0.321962833404541, 0.5123581886291504, 0.7076237797737122, 0.8480172157287598, 0.9133267402648926, 0.936190128326416, 0.9404413104057312], [0.18182706832885742, 0.2717052698135376, 0.4150518774986267, 0.5729652047157288, 0.7236022353172302, 0.8445388078689575, 0.9048143625259399, 0.9325639605522156, 0.9394708871841431]], [[0.10000000894069672, 0.10000000894069672, 0.10000000894069672, 0.11794928461313248, 0.5062659978866577, 0.9213237762451172, 0.9409365653991699, 0.9411941766738892, 0.9411941766738892], [0.10000000894069672, 0.10161542892456055, 0.11791734397411346, 0.22806313633918762, 0.5050339102745056, 0.8044587969779968, 0.9237020611763, 0.9404013752937317, 0.9409464597702026], [0.10371607542037964, 0.11772964894771576, 0.1804552674293518, 0.31458863615989685, 0.5174460411071777, 0.7305811047554016, 0.864688515663147, 0.9260702133178711, 0.9388159513473511], [0.12029755115509033, 0.15532946586608887, 0.23204472661018372, 0.3600459098815918, 0.5252315998077393, 0.6847623586654663, 0.8044408559799194, 0.8836142420768738, 0.9213738441467285], [0.14350640773773193, 0.19636979699134827, 0.2833905816078186, 0.39600038528442383, 0.5354133248329163, 0.6605111360549927, 0.7742432355880737, 0.8528314828872681, 0.8993629217147827]], [[0.10000000894069672, 0.10000000894069672, 0.10000000894069672, 0.13510385155677795, 0.7237959504127502, 0.9409166574478149, 0.9411941766738892, 0.9411941766738892, 0.9411941766738892], [0.10000000894069672, 0.10190296173095703, 0.1343390792608261, 0.3426377773284912, 0.7274959683418274, 0.9197384119033813, 0.9409166574478149, 0.9411941766738892, 0.9411941766738892], [0.1063917875289917, 0.136341854929924, 0.25194090604782104, 0.46980634331703186, 0.7287579774856567, 0.8850140571594238, 0.9366054534912109, 0.9409365653991699, 0.9411941766738892], [0.13698682188987732, 0.20323681831359863, 0.33769965171813965, 0.5349161028862, 0.7241413593292236, 0.8560223579406738, 0.9174880981445312, 0.9366453886032104, 0.9403914213180542], [0.1876876801252365, 0.2823043167591095, 0.42797723412513733, 0.5843570828437805, 0.7319787740707397, 0.8517352938652039, 0.908115029335022, 0.9336321949958801, 0.9396286010742188]]]
# YERRs = [[[0.0, 0.0, 0.0, 0.005230887793004513, 0.020680660381913185, 0.0022129870485514402, 0.0015467474004253745, 0.0015467474004253745, 0.0015467474004253745], [0.0, 0.0018323330441489816, 0.007708917837589979, 0.030038023367524147, 0.01670229434967041, 0.007933992892503738, 0.0029925198759883642, 0.0019475067965686321, 0.0019475067965686321], [0.0036845155991613865, 0.0073768761940300465, 0.02282513678073883, 0.025354357436299324, 0.0238095223903656, 0.00999614130705595, 0.003381600370630622, 0.001722637563943863, 0.0015363995917141438], [0.01007137168198824, 0.018763257190585136, 0.02304946817457676, 0.029327023774385452, 0.02164234034717083, 0.01433481089770794, 0.007597366347908974, 0.004040644038468599, 0.0019613450858742], [0.016798706725239754, 0.023756859824061394, 0.022297341376543045, 0.020159607753157616, 0.016606085002422333, 0.013803456909954548, 0.00638938182964921, 0.002470136620104313, 0.003103881608694792]], [[0.0, 0.0, 0.0, 0.006518627516925335, 0.029275977984070778, 0.008341534063220024, 0.0007727623451501131, 5.960464477539063e-08, 5.960464477539063e-08], [0.0, 0.0017988461768254638, 0.004974487703293562, 0.01787710003554821, 0.02199803665280342, 0.01699485443532467, 0.006648260168731213, 0.0012128340313211083, 0.0007428109529428184], [0.003267860971391201, 0.0057851155288517475, 0.0148616349324584, 0.01736372709274292, 0.019901065155863762, 0.011981724761426449, 0.011728312820196152, 0.007564783561974764, 0.001872471533715725], [0.012416345998644829, 0.017421504482626915, 0.019028106704354286, 0.0187537744641304, 0.016293829306960106, 0.016154706478118896, 0.015668954700231552, 0.01317531056702137, 0.0061455038376152515], [0.01554141379892826, 0.022564493119716644, 0.02577846124768257, 0.02572254277765751, 0.03134910389780998, 0.0197205301374197, 0.016672739759087563, 0.014901731163263321, 0.009314330294728279]], [[0.0, 0.0, 0.0, 0.006140294950455427, 0.021545464172959328, 0.0008326649549417198, 5.960464477539063e-08, 5.960464477539063e-08, 5.960464477539063e-08], [0.0, 0.0024871465284377337, 0.007305915001779795, 0.03530470281839371, 0.01597539521753788, 0.007834608666598797, 0.0008326649549417198, 5.960464477539063e-08, 5.960464477539063e-08], [0.0038414658047258854, 0.00777417840436101, 0.026173299178481102, 0.028070250526070595, 0.022729935124516487, 0.010957642458379269, 0.0024500242434442043, 0.0007727623451501131, 5.960464477539063e-08], [0.010867188684642315, 0.023839663714170456, 0.024469774216413498, 0.028167085722088814, 0.020028049126267433, 0.012508517131209373, 0.005543376784771681, 0.00280367536470294, 0.0012269780272617936], [0.017185255885124207, 0.024786867201328278, 0.022736994549632072, 0.01808529905974865, 0.015916118398308754, 0.010641109198331833, 0.00608012406155467, 0.0032863100059330463, 0.0017222617752850056]]]
# Ys,YERRs = np.array(Ys),np.array(YERRs)	
# for i,std in enumerate([0.1,0.2,0.3,0.4,0.5]):
# 	y = Ys[:,i,:]
# 	yerr = YERRs[:,i,:]
# 	line_plot(x, y,['Ours','No replica','Optimal'],colors,
# 		f'/home/bo/Dropbox/Research/SIGCOMM23/images/syn{i}_ea.eps',
# 		'Deadline','Effective Top1 Accuracy (%)',yerr=yerr)	

# line_plot([[0.1,0.2,0.4,0.8,1.6] for _ in range(3)], Ys.mean(axis=-1),['Ours','Standalone','Optimal-2'],colors,
# 		f'/home/bo/Dropbox/Research/SIGCOMM23/images/syn_ea_vs_std.eps',
# 		'Std','Effective Top1 Accuracy (%)',yerr=YERRs.mean(axis=-1),xticks=[0.1,0.2,0.4,0.8,1.6])	
# Ys = [[[1.0, 1.0, 1.0, 0.971884984025559, 0.33354632587859423, 0.0009584664536741227, 0.0, 0.0, 0.0], [1.0, 0.9984025559105432, 0.9642172523961662, 0.7444089456869009, 0.29073482428115016, 0.03897763578274761, 0.0012779552715655007, 0.0, 0.0], [0.9936102236421724, 0.9613418530351439, 0.839297124600639, 0.5859424920127796, 0.2747603833865815, 0.07476038338658145, 0.0073482428115016155, 0.00031948881789137793, 0.0], [0.9594249201277956, 0.8894568690095846, 0.7361022364217252, 0.5092651757188498, 0.27731629392971247, 0.1108626198083067, 0.03322683706070288, 0.006070287539936115, 0.0009584664536741339], [0.9022364217252397, 0.7955271565495208, 0.6255591054313099, 0.4380191693290735, 0.2587859424920128, 0.11501597444089455, 0.043450479233226855, 0.01054313099041535, 0.0022364217252396233]], [[1.0, 1.0, 1.0, 0.9789137380191694, 0.5169329073482428, 0.02364217252396166, 0.00031948881789137793, 0.0, 0.0], [1.0, 0.9980830670926517, 0.9785942492012779, 0.847923322683706, 0.517891373801917, 0.1623003194888179, 0.02076677316293931, 0.0009584664536741339, 0.00031948881789137793], [0.9955271565495206, 0.9789137380191695, 0.9047923322683706, 0.7447284345047922, 0.5038338658146966, 0.2507987220447284, 0.09137380191693292, 0.01789137380191692, 0.0028753993610223794], [0.976038338658147, 0.9341853035143769, 0.8428115015974441, 0.6904153354632587, 0.4939297124600638, 0.3047923322683706, 0.16261980830670925, 0.068370607028754, 0.02364217252396166], [0.9482428115015976, 0.8856230031948883, 0.7817891373801917, 0.6476038338658147, 0.48242811501597443, 0.3335463258785943, 0.19840255591054312, 0.10479233226837063, 0.0498402555910543]], [[1.0, 1.0, 1.0, 0.9584664536741213, 0.25782747603833867, 0.00031948881789137793, 0.0, 0.0, 0.0], [1.0, 0.9977635782747603, 0.9591054313099041, 0.7118210862619808, 0.2539936102236422, 0.025559105431309903, 0.00031948881789137793, 0.0, 0.0], [0.9923322683706072, 0.9568690095846645, 0.8201277955271566, 0.5603833865814696, 0.25303514376996805, 0.06709265175718851, 0.005431309904153381, 0.00031948881789137793, 0.0], [0.9562300319488817, 0.8773162939297124, 0.7172523961661341, 0.4827476038338657, 0.257188498402556, 0.10095846645367412, 0.028115015974440903, 0.005431309904153359, 0.0009584664536741339], [0.895846645367412, 0.78370607028754, 0.6105431309904154, 0.42364217252396175, 0.24920127795527156, 0.10670926517571884, 0.03961661341853036, 0.008945686900958493, 0.0019169329073482565]]]
# YERRs = [[[0.0, 0.0, 0.0, 0.006195118028647078, 0.0233117397405172, 0.0020457265934290224, 0.0, 0.0, 0.0], [0.0, 0.0021431961445684913, 0.009013888804898312, 0.03676204437991701, 0.02010496194575368, 0.010576961889614598, 0.002119249067319745, 0.0, 0.0], [0.004286392289136967, 0.008626198083067088, 0.027186602427482182, 0.031179227856245002, 0.028107753927057836, 0.012307578456395024, 0.0032108228821472475, 0.0009584664536741338, 0.0], [0.012211830577390661, 0.022555095967696868, 0.02756505381485365, 0.03512052673140265, 0.025670682973291583, 0.01672669662965934, 0.008355716824678611, 0.0038998580241960804, 0.0014640816916792014], [0.020417310298620393, 0.02861164623289215, 0.02660787580020066, 0.02392755826626554, 0.01906253532290901, 0.016477695793262147, 0.007587439033251054, 0.0032108228821472722, 0.0024952874363918976]], [[0.0, 0.0, 0.0, 0.007587439033251081, 0.034255399753815245, 0.009816160700151568, 0.0009584664536741338, 0.0, 0.0], [0.0, 0.0021192490673197484, 0.0058997397164918435, 0.021583828439686287, 0.025854917579789378, 0.020347199141329923, 0.007727403592618434, 0.0014640816916792014, 0.0009584664536741338], [0.0038338658146964853, 0.006578677406381503, 0.017948334703115826, 0.021020810414819152, 0.024207471871584157, 0.014658236098344367, 0.014013873609879435, 0.008945686900958457, 0.0022364217252396107], [0.01451829746645594, 0.02056674369256369, 0.023074083176061067, 0.023670219095196735, 0.01928611919844929, 0.019391681668362328, 0.01809841410641348, 0.015533860423186208, 0.007451695712262372], [0.018618277679659363, 0.026722713950576987, 0.03061263096794815, 0.029972410563247658, 0.036595069810291016, 0.023659435886995053, 0.019923912878810048, 0.01800511540396852, 0.011268493347315268]], [[0.0, 0.0, 0.0, 0.007143987148561616, 0.02568062167937198, 0.0009584664536741337, 0.0, 0.0, 0.0], [0.0, 0.0028753993610223733, 0.00854893812157166, 0.04206589288340648, 0.019655704045076074, 0.008922837088670237, 0.0009584664536741337, 0.0, 0.0], [0.004563213053381999, 0.009504456728845688, 0.03143516704518351, 0.033787358636171945, 0.02653104088437915, 0.012699429338243959, 0.00287539936102235, 0.0009584664536741338, 0.0], [0.012703447509310557, 0.028115015974440886, 0.029325175320584377, 0.03358281903692758, 0.023833523196879567, 0.014514781714505485, 0.0065163188672112335, 0.0032108228821472492, 0.0014640816916792014], [0.02071509914050776, 0.029733065101092613, 0.02772198415915026, 0.02125020977420561, 0.01911600677527359, 0.012634964813600739, 0.007028753993610205, 0.0037258478561311963, 0.0021192490673197484]]]
# Ys,YERRs = np.array(Ys),np.array(YERRs)
# for i,std in enumerate([0.1,0.2,0.3,0.4,0.5]):
# 	y = Ys[:,i,:]
# 	yerr = YERRs[:,i,:]
# 	line_plot(x, y,['Ours','No replica','Optimal'],colors,
# 		f'/home/bo/Dropbox/Research/SIGCOMM23/images/syn{i}_fr.eps',
# 		'Deadline','Failure Rate',yerr=yerr)
# line_plot([[0.1,0.2,0.4,0.8,1.6] for _ in range(3)], Ys.mean(axis=-1),['Ours','Standalone','Optimal-2'],colors,
# 		f'/home/bo/Dropbox/Research/SIGCOMM23/images/syn_fr_vs_std.eps',
# 		'Std','Failure Rate',yerr=YERRs.mean(axis=-1),xticks=[0.1,0.2,0.4,0.8,1.6])	

# correctness
our_correctness = [[1.0, 0.9375, 0.96875, 0.9375, 0.9375, 0.96875, 0.96875, 0.875, 0.9375, 0.90625, 0.90625, 0.96875, 0.90625, 0.9375, 0.9375, 0.96875, 0.90625, 0.96875, 0.96875, 0.96875, 0.875, 0.9375, 1.0, 0.96875, 0.90625, 0.96875, 0.875, 0.9375, 0.96875, 0.9375, 0.9375, 1.0, 0.9375, 0.9375, 1.0, 0.96875, 0.96875, 0.96875, 0.96875, 0.90625, 0.90625, 0.96875, 0.96875, 0.96875, 0.90625, 1.0, 0.9375, 0.96875, 0.9375, 0.9375, 0.9375, 0.9375, 1.0, 0.9375, 0.9375, 0.96875, 0.90625, 0.90625, 0.96875, 0.84375, 0.90625, 0.96875, 1.0, 0.90625, 0.90625, 1.0, 0.9375, 1.0, 0.875, 0.96875, 0.96875, 0.9375, 1.0, 0.9375, 0.90625, 0.875, 0.9375, 0.96875, 0.875, 0.96875, 0.96875, 0.96875, 0.96875, 0.90625, 0.9375, 0.96875, 0.9375, 0.96875, 0.96875, 0.875, 0.96875, 0.9375, 0.78125, 0.90625, 0.9375, 0.9375, 0.84375, 0.90625, 1.0, 1.0, 1.0, 0.9375, 0.84375, 0.96875, 0.90625, 1.0, 0.96875, 0.96875, 0.96875, 0.9375, 0.875, 0.96875, 0.96875, 0.90625, 0.96875, 0.9375, 0.96875, 0.9375, 1.0, 0.9375, 0.96875, 0.96875, 0.9375, 0.90625, 1.0, 0.9375, 0.90625, 1.0, 0.96875, 0.90625, 0.9375, 0.96875, 0.9375, 0.9375, 0.9375, 0.9375, 0.90625, 1.0, 0.96875, 0.9375, 1.0, 1.0, 1.0, 0.9375, 0.875, 0.875, 0.90625, 0.9375, 0.96875, 0.90625, 0.9375, 0.9375, 0.90625, 1.0, 0.96875, 0.96875, 0.90625, 0.96875, 0.96875, 0.96875, 0.9375, 0.9375, 0.9375, 0.96875, 1.0, 0.90625, 0.90625, 0.90625, 0.90625, 0.875, 0.9375, 0.96875, 0.96875, 0.84375, 0.96875, 0.96875, 0.90625, 0.84375, 0.9375, 0.9375, 0.90625, 0.96875, 0.9375, 0.90625, 0.90625, 0.9375, 0.9375, 0.96875, 0.875, 1.0, 0.96875, 0.96875, 0.9375, 0.96875, 0.90625, 1.0, 0.96875, 0.90625, 0.875, 0.9375, 0.875, 0.9375, 0.9375, 1.0, 0.9375, 1.0, 0.9375, 1.0, 0.96875, 1.0, 1.0, 0.96875, 0.96875, 0.9375, 0.96875, 0.875, 0.96875, 0.96875, 1.0, 0.9375, 0.90625, 0.9375, 0.96875, 0.84375, 0.90625, 0.9375, 0.96875, 0.90625, 0.9375, 0.96875, 0.90625, 0.96875, 0.9375, 0.96875, 0.96875, 0.90625, 0.9375, 0.90625, 0.9375, 0.90625, 0.84375, 0.96875, 0.9375, 0.96875, 1.0, 0.9375, 0.96875, 0.96875, 0.90625, 0.96875, 0.90625, 0.96875, 0.90625, 0.96875, 0.9375, 1.0, 0.9375, 0.90625, 0.9375, 1.0, 0.9375, 0.96875, 1.0, 0.96875, 0.9375, 0.9375, 0.90625, 0.96875, 0.90625, 0.96875, 0.90625, 0.90625, 0.9375, 0.96875, 0.9375, 1.0, 0.90625, 1.0, 0.96875, 0.96875, 0.9375, 0.96875, 0.90625, 0.9375, 0.9375, 0.9375, 0.90625, 0.90625, 0.96875, 0.875, 0.96875, 0.90625, 0.9375, 0.9375, 0.9375, 0.90625, 1.0, 0.9375, 0.9375, 0.9375, 0.8125, 0.90625, 0.9375, 0.84375, 0.90625, 0.84375, 0.96875, 0.96875, 0.875, 0.90625, 1.0, 0.96875, 0.875], [0.96875, 0.9375, 0.96875, 1.0, 0.90625, 1.0, 0.96875, 0.875, 0.9375, 0.875, 0.875, 0.8125, 0.90625, 0.90625, 0.9375, 0.96875, 1.0, 0.9375, 0.84375, 0.90625, 0.875, 0.9375, 1.0, 0.9375, 0.9375, 0.90625, 0.96875, 0.9375, 0.90625, 0.96875, 0.9375, 0.84375, 0.78125, 0.9375, 0.9375, 0.90625, 0.9375, 0.96875, 0.9375, 0.90625, 0.90625, 0.96875, 0.9375, 0.9375, 0.9375, 0.9375, 0.9375, 1.0, 0.96875, 0.96875, 0.9375, 0.9375, 0.84375, 0.90625, 0.875, 0.90625, 0.96875, 0.96875, 0.90625, 0.9375, 1.0, 0.96875, 0.9375, 0.9375, 0.96875, 0.9375, 0.96875, 0.96875, 0.96875, 0.9375, 0.96875, 1.0, 0.96875, 0.96875, 0.90625, 0.96875, 0.96875, 0.96875, 0.9375, 0.9375, 0.90625, 0.96875, 0.9375, 0.9375, 0.96875, 0.90625, 0.90625, 0.9375, 0.96875, 0.90625, 0.9375, 0.90625, 0.90625, 0.875, 0.90625, 0.96875, 1.0, 0.90625, 0.96875, 0.9375, 0.96875, 0.96875, 0.90625, 0.90625, 0.875, 0.9375, 0.875, 0.96875, 0.96875, 0.90625, 0.9375, 0.9375, 0.84375, 0.96875, 0.96875, 0.90625, 0.9375, 1.0, 0.9375, 0.9375, 0.96875, 0.90625, 0.96875, 0.96875, 0.96875, 0.8125, 0.9375, 0.9375, 0.9375, 0.9375, 0.96875, 0.875, 0.875, 0.90625, 0.96875, 1.0, 0.96875, 0.9375, 0.96875, 0.96875, 0.9375, 0.9375, 0.9375, 0.96875, 0.875, 0.9375, 1.0, 0.84375, 0.96875, 0.90625, 0.90625, 0.9375, 0.96875, 0.875, 1.0, 1.0, 0.9375, 0.9375, 0.96875, 0.90625, 0.90625, 1.0, 0.90625, 1.0, 0.875, 0.875, 0.875, 0.90625, 0.96875, 0.9375, 0.96875, 0.9375, 0.9375, 0.90625, 0.96875, 0.9375, 0.90625, 0.90625, 0.875, 0.9375, 0.96875, 0.9375, 0.90625, 0.9375, 0.9375, 0.96875, 1.0, 0.96875, 1.0, 0.9375, 0.96875, 0.9375, 0.90625, 0.96875, 1.0, 1.0, 0.96875, 1.0, 0.90625, 0.90625, 0.96875, 0.9375, 0.90625, 0.96875, 0.9375, 0.96875, 0.90625, 1.0, 0.84375, 0.9375, 0.8125, 0.9375, 0.96875, 0.9375, 0.96875, 1.0, 0.9375, 0.875, 1.0, 0.96875, 1.0, 0.9375, 1.0, 0.90625, 0.96875, 0.9375, 0.875, 0.96875, 0.96875, 0.90625, 1.0, 0.96875, 0.90625, 0.96875, 1.0, 0.875, 0.875, 0.96875, 0.84375, 0.96875, 0.96875, 0.96875, 0.90625, 0.9375, 0.875, 1.0, 0.96875, 0.96875, 0.90625, 0.96875, 1.0, 0.96875, 0.96875, 0.96875, 0.96875, 0.90625, 0.96875, 1.0, 0.875, 0.9375, 0.9375, 0.875, 0.96875, 1.0, 1.0, 0.9375, 0.875, 0.96875, 0.90625, 0.90625, 0.90625, 0.90625, 0.96875, 0.9375, 0.9375, 0.9375, 0.96875, 0.9375, 0.96875, 1.0, 1.0, 1.0, 1.0, 0.96875, 0.96875, 0.96875, 1.0, 0.9375, 0.96875, 0.9375, 0.96875, 0.875, 0.9375, 0.875, 0.96875, 0.96875, 0.96875, 0.9375, 1.0, 0.9375, 0.96875, 0.90625, 0.96875, 0.9375, 0.9375, 1.0, 0.90625, 0.90625, 1.0, 0.9375, 0.96875, 0.90625, 0.9375], [0.875, 0.96875, 0.9375, 0.9375, 0.96875, 0.90625, 0.9375, 0.84375, 0.96875, 0.96875, 1.0, 0.9375, 0.9375, 0.9375, 0.9375, 0.875, 1.0, 0.875, 0.9375, 0.96875, 0.9375, 1.0, 0.9375, 0.84375, 0.9375, 0.90625, 0.9375, 0.9375, 0.9375, 0.9375, 0.90625, 0.9375, 0.90625, 0.875, 0.90625, 0.9375, 0.9375, 0.9375, 0.84375, 0.875, 0.90625, 1.0, 0.90625, 0.96875, 0.90625, 0.90625, 0.9375, 0.9375, 0.875, 0.9375, 0.96875, 0.9375, 0.90625, 0.875, 0.96875, 0.875, 0.90625, 0.96875, 1.0, 0.9375, 0.90625, 0.9375, 0.90625, 0.875, 0.90625, 0.96875, 0.96875, 0.9375, 0.96875, 0.96875, 0.9375, 0.9375, 0.96875, 0.875, 0.9375, 0.9375, 0.84375, 1.0, 0.96875, 0.875, 0.96875, 0.96875, 0.96875, 0.90625, 0.9375, 0.96875, 0.96875, 0.96875, 0.9375, 0.90625, 0.90625, 0.90625, 0.9375, 0.875, 0.8125, 0.9375, 1.0, 0.90625, 0.96875, 0.96875, 0.90625, 0.9375, 0.875, 0.875, 1.0, 0.96875, 0.875, 1.0, 0.96875, 0.96875, 0.84375, 0.90625, 0.90625, 0.96875, 0.875, 0.90625, 0.9375, 0.96875, 0.96875, 0.9375, 0.90625, 0.9375, 0.96875, 0.90625, 0.90625, 0.90625, 0.96875, 0.84375, 0.9375, 0.9375, 0.875, 0.9375, 0.9375, 0.9375, 0.875, 0.9375, 0.96875, 0.9375, 0.90625, 0.90625, 0.96875, 0.9375, 0.96875, 0.90625, 0.875, 0.96875, 0.96875, 0.96875, 1.0, 0.96875, 0.9375, 0.90625, 0.875, 0.71875, 0.9375, 0.875, 1.0, 0.9375, 0.9375, 0.84375, 1.0, 0.9375, 0.96875, 0.875, 0.9375, 0.9375, 0.90625, 0.84375, 0.90625, 0.9375, 0.9375, 1.0, 0.9375, 0.78125, 0.9375, 0.90625, 0.90625, 0.96875, 0.9375, 0.875, 0.9375, 0.96875, 0.9375, 0.9375, 0.9375, 0.90625, 0.875, 0.90625, 0.875, 0.96875, 0.84375, 0.96875, 0.96875, 0.9375, 1.0, 0.96875, 0.9375, 0.84375, 0.875, 0.9375, 0.90625, 0.90625, 0.96875, 0.9375, 0.90625, 0.9375, 0.9375, 0.9375, 0.9375, 0.96875, 0.875, 0.90625, 0.90625, 0.875, 0.9375, 0.9375, 0.90625, 0.9375, 0.90625, 0.9375, 0.875, 1.0, 0.90625, 0.96875, 0.875, 0.9375, 0.96875, 0.96875, 0.96875, 0.90625, 0.9375, 0.9375, 0.9375, 0.9375, 0.9375, 0.90625, 0.96875, 0.9375, 0.875, 0.96875, 0.9375, 0.90625, 0.96875, 0.78125, 0.875, 0.9375, 0.90625, 0.90625, 0.96875, 0.90625, 0.9375, 0.96875, 0.9375, 0.9375, 0.90625, 0.8125, 1.0, 0.96875, 0.9375, 0.90625, 0.96875, 0.90625, 0.96875, 0.96875, 0.90625, 1.0, 1.0, 0.9375, 0.875, 0.90625, 1.0, 0.9375, 0.84375, 0.9375, 0.96875, 0.96875, 1.0, 0.96875, 0.96875, 0.84375, 0.875, 0.875, 0.96875, 0.90625, 0.84375, 0.875, 0.96875, 0.96875, 0.9375, 0.96875, 1.0, 0.90625, 0.96875, 0.90625, 0.90625, 0.90625, 0.9375, 0.9375, 0.84375, 0.9375, 0.9375, 0.84375, 0.96875, 0.84375, 0.90625, 0.9375, 0.875, 0.84375, 0.90625, 0.96875, 0.9375, 0.9375, 0.9375], [0.96875, 0.90625, 0.90625, 0.9375, 0.875, 0.8125, 0.96875, 0.9375, 0.84375, 0.84375, 0.875, 0.96875, 0.9375, 0.90625, 0.78125, 0.90625, 0.875, 0.90625, 0.875, 0.9375, 0.90625, 0.9375, 0.78125, 0.9375, 0.90625, 0.90625, 0.875, 0.90625, 0.9375, 0.84375, 0.9375, 0.78125, 0.84375, 0.96875, 0.875, 0.875, 0.9375, 0.8125, 0.90625, 0.90625, 0.90625, 0.9375, 0.96875, 0.875, 1.0, 0.90625, 0.96875, 0.9375, 0.875, 0.90625, 0.9375, 0.90625, 0.96875, 0.90625, 0.78125, 0.90625, 0.9375, 0.875, 0.90625, 0.9375, 0.9375, 1.0, 0.9375, 0.90625, 0.9375, 0.9375, 0.84375, 0.96875, 0.875, 0.96875, 0.9375, 0.90625, 0.84375, 0.90625, 0.75, 0.875, 0.96875, 0.96875, 0.90625, 0.875, 0.875, 0.875, 0.90625, 0.8125, 0.875, 0.96875, 0.8125, 0.90625, 0.9375, 0.90625, 0.84375, 0.90625, 0.9375, 0.9375, 0.875, 0.84375, 0.96875, 0.84375, 0.875, 0.9375, 0.84375, 0.96875, 0.875, 0.90625, 0.875, 0.90625, 0.90625, 1.0, 0.96875, 0.875, 0.75, 0.90625, 0.875, 0.90625, 0.9375, 0.84375, 0.90625, 1.0, 0.90625, 0.875, 0.9375, 0.9375, 0.9375, 0.875, 0.9375, 0.84375, 0.96875, 0.9375, 0.875, 0.875, 1.0, 0.84375, 0.9375, 0.96875, 0.9375, 0.8125, 0.875, 0.9375, 0.9375, 0.84375, 0.84375, 0.90625, 0.84375, 0.96875, 0.96875, 1.0, 0.84375, 0.9375, 0.96875, 0.90625, 0.875, 0.9375, 0.90625, 0.96875, 0.84375, 0.96875, 0.96875, 0.96875, 0.9375, 0.875, 0.9375, 0.8125, 0.90625, 0.9375, 0.9375, 0.90625, 0.875, 0.9375, 0.96875, 0.9375, 0.90625, 0.9375, 0.96875, 0.875, 0.875, 0.90625, 0.84375, 1.0, 0.96875, 0.9375, 0.90625, 0.9375, 0.90625, 0.96875, 0.90625, 0.96875, 0.90625, 0.8125, 0.875, 0.90625, 0.90625, 0.875, 0.875, 0.9375, 0.875, 0.96875, 0.90625, 0.90625, 0.875, 0.875, 0.9375, 1.0, 0.96875, 0.84375, 0.96875, 0.78125, 0.9375, 0.90625, 0.84375, 0.78125, 0.875, 0.875, 0.9375, 0.9375, 0.875, 0.90625, 0.875, 0.875, 0.90625, 0.96875, 0.96875, 0.78125, 0.96875, 0.96875, 0.84375, 0.875, 0.8125, 0.875, 0.875, 0.875, 0.875, 0.9375, 0.78125, 0.9375, 0.84375, 0.96875, 1.0, 0.90625, 0.90625, 1.0, 0.90625, 0.90625, 0.9375, 0.96875, 0.9375, 0.96875, 0.90625, 0.90625, 0.8125, 0.90625, 0.90625, 0.96875, 0.9375, 0.84375, 0.9375, 0.96875, 0.9375, 0.9375, 0.9375, 0.84375, 0.90625, 0.9375, 0.875, 1.0, 0.9375, 1.0, 0.96875, 0.875, 0.9375, 0.9375, 0.9375, 0.875, 0.90625, 0.8125, 0.875, 0.9375, 0.84375, 0.90625, 0.96875, 0.875, 0.90625, 0.90625, 0.90625, 0.875, 1.0, 0.9375, 0.9375, 0.9375, 0.84375, 0.90625, 0.9375, 0.9375, 0.875, 0.875, 0.9375, 0.9375, 0.9375, 0.875, 0.90625, 0.9375, 0.9375, 0.9375, 0.96875, 0.96875, 0.9375, 0.9375, 0.875, 0.875, 0.96875, 0.9375, 0.90625, 0.875, 0.75]]
solo_correctness = [0.75, 0.875, 0.9375, 0.9375, 0.9375, 0.9375, 0.9375, 0.9375, 0.96875, 0.9375, 0.90625, 0.9375, 0.9375, 0.9375, 1.0, 1.0, 0.9375, 0.90625, 0.9375, 0.90625, 0.96875, 0.96875, 1.0, 0.9375, 0.9375, 0.875, 0.9375, 0.90625, 0.875, 0.96875, 0.9375, 0.90625, 0.875, 0.96875, 0.96875, 0.9375, 0.96875, 0.96875, 0.96875, 0.9375, 0.9375, 0.90625, 0.90625, 0.90625, 0.90625, 1.0, 0.78125, 0.90625, 1.0, 0.9375, 0.9375, 1.0, 0.90625, 0.90625, 0.9375, 0.96875, 0.84375, 0.96875, 0.96875, 0.96875, 0.9375, 0.90625, 0.9375, 0.96875, 1.0, 1.0, 0.9375, 0.96875, 0.84375, 1.0, 1.0, 0.96875, 0.84375, 1.0, 0.90625, 0.9375, 0.96875, 1.0, 0.90625, 0.96875, 1.0, 0.96875, 0.96875, 1.0, 0.96875, 0.96875, 0.90625, 0.96875, 0.9375, 1.0, 0.96875, 1.0, 0.9375, 0.90625, 0.96875, 0.96875, 0.9375, 1.0, 0.9375, 1.0, 0.90625, 0.9375, 0.96875, 0.9375, 0.96875, 0.84375, 0.96875, 0.90625, 0.875, 0.90625, 0.9375, 0.96875, 1.0, 0.9375, 0.9375, 0.96875, 0.9375, 0.84375, 0.96875, 0.875, 0.90625, 0.9375, 0.96875, 0.90625, 0.96875, 0.9375, 1.0, 0.90625, 0.90625, 0.96875, 0.9375, 1.0, 0.90625, 0.90625, 0.9375, 0.90625, 0.96875, 0.8125, 0.9375, 0.84375, 0.90625, 0.84375, 0.90625, 1.0, 0.96875, 1.0, 0.9375, 0.96875, 0.875, 1.0, 0.96875, 1.0, 0.875, 0.875, 0.9375, 0.96875, 1.0, 0.84375, 0.9375, 0.875, 0.96875, 1.0, 0.90625, 0.9375, 0.875, 0.96875, 0.96875, 0.96875, 0.96875, 0.96875, 0.90625, 0.90625, 0.90625, 0.96875, 0.9375, 0.8125, 0.9375, 0.9375, 0.96875, 0.90625, 0.96875, 0.90625, 1.0, 0.96875, 1.0, 0.9375, 1.0, 0.9375, 0.9375, 0.9375, 0.875, 0.90625, 0.875, 0.96875, 1.0, 0.90625, 0.84375, 0.9375, 0.9375, 1.0, 1.0, 0.875, 1.0, 1.0, 0.9375, 0.90625, 0.96875, 0.90625, 1.0, 1.0, 0.90625, 0.96875, 0.96875, 1.0, 0.96875, 0.96875, 0.875, 0.90625, 0.96875, 0.90625, 1.0, 0.96875, 0.96875, 1.0, 0.875, 0.9375, 1.0, 0.875, 0.90625, 0.96875, 0.96875, 0.96875, 0.875, 0.96875, 0.9375, 0.875, 0.96875, 0.90625, 0.90625, 0.90625, 0.9375, 1.0, 0.84375, 1.0, 0.9375, 1.0, 0.96875, 0.9375, 0.875, 0.875, 0.9375, 0.9375, 0.96875, 0.90625, 0.96875, 0.9375, 0.96875, 0.96875, 0.9375, 0.96875, 0.96875, 1.0, 0.96875, 0.9375, 0.90625, 0.96875, 0.84375, 1.0, 1.0, 0.96875, 0.90625, 0.96875, 0.90625, 1.0, 0.9375, 1.0, 0.9375, 0.90625, 0.96875, 0.96875, 1.0, 0.90625, 1.0, 0.90625, 1.0, 0.96875, 0.90625, 0.96875, 0.96875, 0.96875, 0.9375, 0.9375, 0.96875, 0.9375, 0.90625, 0.9375, 0.96875, 1.0, 0.96875, 0.875, 0.90625, 0.9375, 0.9375, 0.96875, 0.875, 0.9375, 0.96875, 0.84375, 0.90625, 0.96875, 0.875, 1.0, 1.0]
our_correctness = np.array(our_correctness)
solo_correctness = np.array(solo_correctness)
our_selection = [2, 1, 1, 2, 0, 1, 0, 3, 0, 1, 3, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 3, 0, 1, 1, 2, 0, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 0, 1, 1, 3, 0, 1, 1, 0, 1, -1, 1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 3, 2, 0, 0, 1, 1, 1, 0, 1, 3, 1, 0, 1, 1, 0, 3, 1, 1, 0, 0, 1, 1, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 2, 0, 1, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 1, 0, 0, 1, 3, 0, 0, 1, 0, 0, 2, 1, 2, 0, 0, 1, 0, 0, 2, 3, 1, 0, 0, 0, 1, 1, 1, 1, 0, 2, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 3, 1, 1, 0, 0, 2, 1, 2, 0, 1, 3, 0, 0, 1, 0, 1, 3, 3, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 0, 0, 3, 1, 1, 3, 3, 1, 0, 1, 0, 1, 1, 1, 3, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solo_selection = [0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
dbl_selection = [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
our_selection = np.array(our_selection)
solo_selection = np.array(solo_selection)
dbl_selection = np.array(dbl_selection)
node0_liveness = [True, True, True, True, True, True, True, False, True, True, False, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, False, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, False, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, False, False, True, True, True, True, True, True, True, False, False, True, True, False, True, True, True, True, True, True, True, True, True, True]
node1_liveness = [False, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, False, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, False, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, False, True, False, True, True, True, False, True, True, True, True, True, True, True, True, True, False, False, True, True, True, True, True, True, False, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, False, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, False, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]
node0_liveness = np.array(node0_liveness)
node1_liveness = np.array(node1_liveness)

num_subnet,num_query = len(our_correctness),len(our_correctness[0])

solo_correctness_w_loss = np.array(solo_correctness)
solo_correctness_w_loss[solo_selection==-1] = 0

dbl_correctness_w_loss = np.array(solo_correctness)
dbl_correctness_w_loss[dbl_selection==-1] = 0

our_correctness_w_loss = np.zeros(num_query)
for i in range(4):
	our_correctness_w_loss[our_selection==i] = our_correctness[i][our_selection==i]
our_correctness_w_loss[our_selection==-1] = 0

# rescale data
solo_correctness = (solo_correctness-0.75)/0.25
our_correctness = (our_correctness-0.75)/0.25


y = []
y += [node0_liveness[:50]+4]
y += [solo_correctness[:50]+2]
y += [(solo_correctness_w_loss[:50])] 
x = [range(1,51) for _ in range(len(y))]
line_plot(x, y,['N#0 Availability','1X (94.12%)','1X w/ loss (85.73%)'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/one_machine_w_loss.eps',
		'# of Queries','',markersize=4,yticks=[0,1,2,3,4,5],yticklabel=['NR (0%)','100%','75%','100%','Dead','Alive'],ncol=3,legloc='upper center',
		ylim=[0,6],ratio=0.32,bbox_to_anchor=(.5,1.3))

# add selection
y = []
y += [node0_liveness[:50]+7]
y += [node1_liveness[:50]+5]
y += [dbl_selection[:50]+3]
y += [dbl_correctness_w_loss[:50]]
x = [range(1,51) for _ in range(len(y))]
line_plot(x, y,['N#0 Availability','N#1 Availability','Selected Node','2X w/ loss (92.87%)'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/two_machine_w_loss.eps',
		'# of Queries','',markersize=4,yticks=range(9),yticklabel=['NR (0%)','100%','None','Node#0','Node#1','Dead','Alive','Dead','Alive'],ncol=2,legloc='upper center',
		ylim=[0,9],ratio=0.32,bbox_to_anchor=(.5,1.4))

y = []
y += [our_correctness[0,:50]+13]
y += [our_correctness[1,:50]+11]
y += [our_correctness[2,:50]+9]
y += [our_correctness[3,:50]+7]
y += [our_selection[:50]+3]
y += [our_correctness_w_loss[:50]]
x = [range(1,51) for _ in range(len(y))]
line_plot(x, y,['SN#0 (94.16%)','SN#1 (94.04%)','SN#2 (93.80%)','SN#3 (93.97%)','Selected SN','Ours w/ loss (92.40%)'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/two_machine_ours_w_loss.eps',
		'# of Queries','',markersize=4,yticks=range(15),
		yticklabel=['NR (0%)','100%','None','SN#0','SN#1','SN#2','SN#3','75%','100%','75%','100%','75%','100%','75%','100%'],ncol=3,legloc='upper center',
		ylim=[0,15],bbox_to_anchor=(.5,1.25))

# mean accuracy/latency vs.nodes of three approaches
# # 2-node
# [0.941703200340271, 0.9411941766738892, 0.9411941766738892]
# [0.0010931950528174639, 5.960464477539063e-08, 5.960464477539063e-08]
# [0.7683045963183902, 1.022090410951564, 0.7511619348866739]
# [0.036507783683489094, 0.06380534150585028, 0.03642609434278379]
# # 3-node
# [0.9406549334526062, 0.9410942196846008, 0.9410942196846008]
# [0.0019054547883570194, 0.0, 0.0]
# [0.6421675192208194, 1.0216991279772232, 0.6265274772529117]
# [0.03688555900682125, 0.06380534150585028, 0.03674916238221722]
# # 4-node
# [0.9345746040344238, 0.9410942196846008, 0.9410942196846008]
# [0.002237866632640362, 0.0, 0.0]
# [0.5867612339610099, 1.0216739911941233, 0.5720289794047533]
# [0.03288692239761618, 0.0638053415058503, 0.03270002455135555]

# x = [[2,3,4] for _ in range(3)]
# y = [
# [0.941703200340271, 0.9411941766738892, 0.9411941766738892],
# [0.9406549334526062, 0.9410942196846008, 0.9410942196846008],
# [0.9345746040344238, 0.9410942196846008, 0.9410942196846008]
# ]
# yerr = [
# [0.0010931950528174639, 5.960464477539063e-08, 5.960464477539063e-08],
# [0.0019054547883570194, 0.0, 0.0],
# [0.002237866632640362, 0.0, 0.0],
# ]
# y = np.array(y).transpose((1,0))
# yerr = np.array(yerr).transpose((1,0))
# line_plot(x, y,['Ours','Standalone','Optimal'],colors,
# 		'/home/bo/Dropbox/Research/SIGCOMM23/images/accuracy_vs_nodes.eps',
# 		'Number of replicas','Top-1 Accuracy (Infinite deadline)',yerr=yerr)
# y = [
# [0.7683045963183902, 1.022090410951564, 0.7511619348866739],
# [0.6421675192208194, 1.0216991279772232, 0.6265274772529117],
# [0.5867612339610099, 1.0216739911941233, 0.5720289794047533]
# ]
# yerr = [
# [0.036507783683489094, 0.06380534150585028, 0.03642609434278379],
# [0.03688555900682125, 0.06380534150585028, 0.03674916238221722],
# [0.03288692239761618, 0.0638053415058503, 0.03270002455135555]
# ]
# y = np.array(y).transpose((1,0))
# yerr = np.array(yerr).transpose((1,0))
# line_plot(x, y,['Ours','Standalone','Optimal'],colors,
# 		'/home/bo/Dropbox/Research/SIGCOMM23/images/latency_vs_nodes.eps',
# 		'Number of replicas','Query Latency',yerr=yerr)

# Wi-Fi
x = [[0.2+0.1*i for i in range(1,10)]for _ in range(3)]
y = [[0.10000000894069672, 0.9101996421813965, 0.931287944316864, 0.9337360262870789, 0.9391573667526245, 0.9418530464172363, 0.9418530464172363, 0.9418530464172363, 0.9418530464172363], [0.10000000894069672, 0.7847703695297241, 0.8569148778915405, 0.8692252039909363, 0.9235442876815796, 0.9353175163269043, 0.9382208585739136, 0.9390336275100708, 0.9395686984062195], [0.10000000894069672, 0.9108685255050659, 0.9312041401863098, 0.9334346055984497, 0.9411941766738892, 0.9411941766738892, 0.9411941766738892, 0.9411941766738892, 0.9411941766738892]]
yerr = [[0.0, 0.012535853311419487, 0.0070809535682201385, 0.004068393260240555, 0.002986897248774767, 0.001973809441551566, 0.001973809441551566, 0.001973809441551566, 0.001973809441551566], [0.0, 0.049521930515766144, 0.03962377831339836, 0.021610815078020096, 0.011123483069241047, 0.007515979930758476, 0.004067623987793922, 0.002647061599418521, 0.002176515059545636], [0.0, 0.013526730239391327, 0.007271786220371723, 0.004095328040421009, 5.960464477539063e-08, 5.960464477539063e-08, 5.960464477539063e-08, 5.960464477539063e-08, 5.960464477539063e-08]]
line_plot(x, y,['Ours','Standalone','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/WF_ea.eps',
		'Deadline','Effective Top1 Accuracy (%)',
		yerr=yerr)	
y = [[1.0, 0.037699680511182124, 0.012460063897763584, 0.009584664536741238, 0.003194888178913746, 0.0, 0.0, 0.0, 0.0], [1.0, 0.18626198083067091, 0.1, 0.08562300319488818, 0.02108626198083069, 0.007028753993610226, 0.003514376996805113, 0.0025559105431310013, 0.0019169329073482455], [1.0, 0.036102236421725255, 0.01182108626198084, 0.00926517571884986, 0.0, 0.0, 0.0, 0.0, 0.0]]
yerr = [[0.0, 0.016215434556484994, 0.009198837091941185, 0.0049494994839711535, 0.002474749741985559, 0.0, 0.0, 0.0, 0.0], [0.0, 0.05861640367035917, 0.04647546632123396, 0.02547109447667061, 0.013342244739821792, 0.009126426106764018, 0.004834743115150649, 0.0031303383294353734, 0.002555910543130985], [0.0, 0.01591362224333836, 0.00845891520439215, 0.004834743115150669, 0.0, 0.0, 0.0, 0.0, 0.0]]
line_plot(x, y,['Ours','Standalone','Optimal'],colors,
		'/home/bo/Dropbox/Research/SIGCOMM23/images/WF_fr.eps',
		'Deadline','Failure Rate',
		yerr=yerr)
